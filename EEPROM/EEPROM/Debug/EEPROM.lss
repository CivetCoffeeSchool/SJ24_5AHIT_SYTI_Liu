
EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000c86  00000d1a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c86  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800116  00800116  00000d30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000dd0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011c6  00000000  00000000  00000ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d8  00000000  00000000  0000209e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a43  00000000  00000000  00002a76  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000244  00000000  00000000  000034bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000523  00000000  00000000  00003700  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008d6  00000000  00000000  00003c23  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000044f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_1>
   8:	0c 94 08 02 	jmp	0x410	; 0x410 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e8       	ldi	r30, 0x86	; 134
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 31       	cpi	r26, 0x18	; 24
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 47 02 	call	0x48e	; 0x48e <main>
  9e:	0c 94 41 06 	jmp	0xc82	; 0xc82 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
  a6:	88 b1       	in	r24, 0x08	; 8
  a8:	88 60       	ori	r24, 0x08	; 8
  aa:	88 b9       	out	0x08, r24	; 8
  ac:	00 00       	nop
  ae:	88 b1       	in	r24, 0x08	; 8
  b0:	87 7f       	andi	r24, 0xF7	; 247
  b2:	88 b9       	out	0x08, r24	; 8
  b4:	08 95       	ret

000000b6 <lcd_write>:
  b6:	cf 93       	push	r28
  b8:	c8 2f       	mov	r28, r24
  ba:	66 23       	and	r22, r22
  bc:	21 f0       	breq	.+8      	; 0xc6 <lcd_write+0x10>
  be:	88 b1       	in	r24, 0x08	; 8
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	88 b9       	out	0x08, r24	; 8
  c4:	03 c0       	rjmp	.+6      	; 0xcc <lcd_write+0x16>
  c6:	88 b1       	in	r24, 0x08	; 8
  c8:	8f 7d       	andi	r24, 0xDF	; 223
  ca:	88 b9       	out	0x08, r24	; 8
  cc:	88 b1       	in	r24, 0x08	; 8
  ce:	8f 7e       	andi	r24, 0xEF	; 239
  d0:	88 b9       	out	0x08, r24	; 8
  d2:	8a b1       	in	r24, 0x0a	; 10
  d4:	80 61       	ori	r24, 0x10	; 16
  d6:	8a b9       	out	0x0a, r24	; 10
  d8:	8a b1       	in	r24, 0x0a	; 10
  da:	80 62       	ori	r24, 0x20	; 32
  dc:	8a b9       	out	0x0a, r24	; 10
  de:	8a b1       	in	r24, 0x0a	; 10
  e0:	80 64       	ori	r24, 0x40	; 64
  e2:	8a b9       	out	0x0a, r24	; 10
  e4:	8a b1       	in	r24, 0x0a	; 10
  e6:	80 68       	ori	r24, 0x80	; 128
  e8:	8a b9       	out	0x0a, r24	; 10
  ea:	8b b1       	in	r24, 0x0b	; 11
  ec:	8f 77       	andi	r24, 0x7F	; 127
  ee:	8b b9       	out	0x0b, r24	; 11
  f0:	8b b1       	in	r24, 0x0b	; 11
  f2:	8f 7b       	andi	r24, 0xBF	; 191
  f4:	8b b9       	out	0x0b, r24	; 11
  f6:	8b b1       	in	r24, 0x0b	; 11
  f8:	8f 7d       	andi	r24, 0xDF	; 223
  fa:	8b b9       	out	0x0b, r24	; 11
  fc:	8b b1       	in	r24, 0x0b	; 11
  fe:	8f 7e       	andi	r24, 0xEF	; 239
 100:	8b b9       	out	0x0b, r24	; 11
 102:	cc 23       	and	r28, r28
 104:	1c f4       	brge	.+6      	; 0x10c <lcd_write+0x56>
 106:	8b b1       	in	r24, 0x0b	; 11
 108:	80 68       	ori	r24, 0x80	; 128
 10a:	8b b9       	out	0x0b, r24	; 11
 10c:	c6 ff       	sbrs	r28, 6
 10e:	03 c0       	rjmp	.+6      	; 0x116 <lcd_write+0x60>
 110:	8b b1       	in	r24, 0x0b	; 11
 112:	80 64       	ori	r24, 0x40	; 64
 114:	8b b9       	out	0x0b, r24	; 11
 116:	c5 ff       	sbrs	r28, 5
 118:	03 c0       	rjmp	.+6      	; 0x120 <lcd_write+0x6a>
 11a:	8b b1       	in	r24, 0x0b	; 11
 11c:	80 62       	ori	r24, 0x20	; 32
 11e:	8b b9       	out	0x0b, r24	; 11
 120:	c4 ff       	sbrs	r28, 4
 122:	03 c0       	rjmp	.+6      	; 0x12a <lcd_write+0x74>
 124:	8b b1       	in	r24, 0x0b	; 11
 126:	80 61       	ori	r24, 0x10	; 16
 128:	8b b9       	out	0x0b, r24	; 11
 12a:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
 12e:	8b b1       	in	r24, 0x0b	; 11
 130:	8f 77       	andi	r24, 0x7F	; 127
 132:	8b b9       	out	0x0b, r24	; 11
 134:	8b b1       	in	r24, 0x0b	; 11
 136:	8f 7b       	andi	r24, 0xBF	; 191
 138:	8b b9       	out	0x0b, r24	; 11
 13a:	8b b1       	in	r24, 0x0b	; 11
 13c:	8f 7d       	andi	r24, 0xDF	; 223
 13e:	8b b9       	out	0x0b, r24	; 11
 140:	8b b1       	in	r24, 0x0b	; 11
 142:	8f 7e       	andi	r24, 0xEF	; 239
 144:	8b b9       	out	0x0b, r24	; 11
 146:	c3 ff       	sbrs	r28, 3
 148:	03 c0       	rjmp	.+6      	; 0x150 <lcd_write+0x9a>
 14a:	8b b1       	in	r24, 0x0b	; 11
 14c:	80 68       	ori	r24, 0x80	; 128
 14e:	8b b9       	out	0x0b, r24	; 11
 150:	c2 ff       	sbrs	r28, 2
 152:	03 c0       	rjmp	.+6      	; 0x15a <lcd_write+0xa4>
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	80 64       	ori	r24, 0x40	; 64
 158:	8b b9       	out	0x0b, r24	; 11
 15a:	c1 ff       	sbrs	r28, 1
 15c:	03 c0       	rjmp	.+6      	; 0x164 <lcd_write+0xae>
 15e:	8b b1       	in	r24, 0x0b	; 11
 160:	80 62       	ori	r24, 0x20	; 32
 162:	8b b9       	out	0x0b, r24	; 11
 164:	c0 ff       	sbrs	r28, 0
 166:	03 c0       	rjmp	.+6      	; 0x16e <lcd_write+0xb8>
 168:	8b b1       	in	r24, 0x0b	; 11
 16a:	80 61       	ori	r24, 0x10	; 16
 16c:	8b b9       	out	0x0b, r24	; 11
 16e:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
 172:	8b b1       	in	r24, 0x0b	; 11
 174:	80 61       	ori	r24, 0x10	; 16
 176:	8b b9       	out	0x0b, r24	; 11
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	80 62       	ori	r24, 0x20	; 32
 17c:	8b b9       	out	0x0b, r24	; 11
 17e:	8b b1       	in	r24, 0x0b	; 11
 180:	80 64       	ori	r24, 0x40	; 64
 182:	8b b9       	out	0x0b, r24	; 11
 184:	8b b1       	in	r24, 0x0b	; 11
 186:	80 68       	ori	r24, 0x80	; 128
 188:	8b b9       	out	0x0b, r24	; 11
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <lcd_read>:
 18e:	88 23       	and	r24, r24
 190:	21 f0       	breq	.+8      	; 0x19a <lcd_read+0xc>
 192:	88 b1       	in	r24, 0x08	; 8
 194:	80 62       	ori	r24, 0x20	; 32
 196:	88 b9       	out	0x08, r24	; 8
 198:	03 c0       	rjmp	.+6      	; 0x1a0 <lcd_read+0x12>
 19a:	88 b1       	in	r24, 0x08	; 8
 19c:	8f 7d       	andi	r24, 0xDF	; 223
 19e:	88 b9       	out	0x08, r24	; 8
 1a0:	88 b1       	in	r24, 0x08	; 8
 1a2:	80 61       	ori	r24, 0x10	; 16
 1a4:	88 b9       	out	0x08, r24	; 8
 1a6:	8a b1       	in	r24, 0x0a	; 10
 1a8:	8f 7e       	andi	r24, 0xEF	; 239
 1aa:	8a b9       	out	0x0a, r24	; 10
 1ac:	8a b1       	in	r24, 0x0a	; 10
 1ae:	8f 7d       	andi	r24, 0xDF	; 223
 1b0:	8a b9       	out	0x0a, r24	; 10
 1b2:	8a b1       	in	r24, 0x0a	; 10
 1b4:	8f 7b       	andi	r24, 0xBF	; 191
 1b6:	8a b9       	out	0x0a, r24	; 10
 1b8:	8a b1       	in	r24, 0x0a	; 10
 1ba:	8f 77       	andi	r24, 0x7F	; 127
 1bc:	8a b9       	out	0x0a, r24	; 10
 1be:	88 b1       	in	r24, 0x08	; 8
 1c0:	88 60       	ori	r24, 0x08	; 8
 1c2:	88 b9       	out	0x08, r24	; 8
 1c4:	00 00       	nop
 1c6:	4c 99       	sbic	0x09, 4	; 9
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <lcd_read+0x40>
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <lcd_read+0x42>
 1ce:	80 e1       	ldi	r24, 0x10	; 16
 1d0:	4d 99       	sbic	0x09, 5	; 9
 1d2:	80 62       	ori	r24, 0x20	; 32
 1d4:	4e 99       	sbic	0x09, 6	; 9
 1d6:	80 64       	ori	r24, 0x40	; 64
 1d8:	4f 99       	sbic	0x09, 7	; 9
 1da:	80 68       	ori	r24, 0x80	; 128
 1dc:	98 b1       	in	r25, 0x08	; 8
 1de:	97 7f       	andi	r25, 0xF7	; 247
 1e0:	98 b9       	out	0x08, r25	; 8
 1e2:	00 00       	nop
 1e4:	98 b1       	in	r25, 0x08	; 8
 1e6:	98 60       	ori	r25, 0x08	; 8
 1e8:	98 b9       	out	0x08, r25	; 8
 1ea:	00 00       	nop
 1ec:	4c 99       	sbic	0x09, 4	; 9
 1ee:	81 60       	ori	r24, 0x01	; 1
 1f0:	4d 99       	sbic	0x09, 5	; 9
 1f2:	82 60       	ori	r24, 0x02	; 2
 1f4:	4e 99       	sbic	0x09, 6	; 9
 1f6:	84 60       	ori	r24, 0x04	; 4
 1f8:	4f 99       	sbic	0x09, 7	; 9
 1fa:	88 60       	ori	r24, 0x08	; 8
 1fc:	98 b1       	in	r25, 0x08	; 8
 1fe:	97 7f       	andi	r25, 0xF7	; 247
 200:	98 b9       	out	0x08, r25	; 8
 202:	08 95       	ret

00000204 <lcd_waitbusy>:
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_read>
 20a:	88 23       	and	r24, r24
 20c:	dc f3       	brlt	.-10     	; 0x204 <lcd_waitbusy>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <lcd_waitbusy+0xc>
 210:	00 c0       	rjmp	.+0      	; 0x212 <lcd_waitbusy+0xe>
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_read>
 218:	08 95       	ret

0000021a <lcd_command>:
 21a:	cf 93       	push	r28
 21c:	c8 2f       	mov	r28, r24
 21e:	0e 94 02 01 	call	0x204	; 0x204 <lcd_waitbusy>
 222:	60 e0       	ldi	r22, 0x00	; 0
 224:	8c 2f       	mov	r24, r28
 226:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_write>
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <lcd_clrscr>:
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_command>
 234:	08 95       	ret

00000236 <lcd_putc>:
 236:	cf 93       	push	r28
 238:	c8 2f       	mov	r28, r24
 23a:	0e 94 02 01 	call	0x204	; 0x204 <lcd_waitbusy>
 23e:	ca 30       	cpi	r28, 0x0A	; 10
 240:	49 f4       	brne	.+18     	; 0x254 <lcd_putc+0x1e>
 242:	80 34       	cpi	r24, 0x40	; 64
 244:	10 f4       	brcc	.+4      	; 0x24a <lcd_putc+0x14>
 246:	80 e4       	ldi	r24, 0x40	; 64
 248:	01 c0       	rjmp	.+2      	; 0x24c <lcd_putc+0x16>
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	80 58       	subi	r24, 0x80	; 128
 24e:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_command>
 252:	04 c0       	rjmp	.+8      	; 0x25c <lcd_putc+0x26>
 254:	61 e0       	ldi	r22, 0x01	; 1
 256:	8c 2f       	mov	r24, r28
 258:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_write>
 25c:	cf 91       	pop	r28
 25e:	08 95       	ret

00000260 <lcd_puts>:
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	fc 01       	movw	r30, r24
 266:	03 c0       	rjmp	.+6      	; 0x26e <lcd_puts+0xe>
 268:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_putc>
 26c:	fe 01       	movw	r30, r28
 26e:	ef 01       	movw	r28, r30
 270:	21 96       	adiw	r28, 0x01	; 1
 272:	80 81       	ld	r24, Z
 274:	81 11       	cpse	r24, r1
 276:	f8 cf       	rjmp	.-16     	; 0x268 <lcd_puts+0x8>
 278:	df 91       	pop	r29
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 27e:	cf 93       	push	r28
 280:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 282:	87 b1       	in	r24, 0x07	; 7
 284:	80 62       	ori	r24, 0x20	; 32
 286:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 288:	87 b1       	in	r24, 0x07	; 7
 28a:	80 61       	ori	r24, 0x10	; 16
 28c:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 28e:	87 b1       	in	r24, 0x07	; 7
 290:	88 60       	ori	r24, 0x08	; 8
 292:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 294:	8a b1       	in	r24, 0x0a	; 10
 296:	80 61       	ori	r24, 0x10	; 16
 298:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 29a:	8a b1       	in	r24, 0x0a	; 10
 29c:	80 62       	ori	r24, 0x20	; 32
 29e:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 2a0:	8a b1       	in	r24, 0x0a	; 10
 2a2:	80 64       	ori	r24, 0x40	; 64
 2a4:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 2a6:	8a b1       	in	r24, 0x0a	; 10
 2a8:	80 68       	ori	r24, 0x80	; 128
 2aa:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ac:	8f e9       	ldi	r24, 0x9F	; 159
 2ae:	9f e0       	ldi	r25, 0x0F	; 15
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <lcd_init+0x32>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <lcd_init+0x38>
 2b6:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 2b8:	8b b1       	in	r24, 0x0b	; 11
 2ba:	80 62       	ori	r24, 0x20	; 32
 2bc:	8b b9       	out	0x0b, r24	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 2be:	8b b1       	in	r24, 0x0b	; 11
 2c0:	80 61       	ori	r24, 0x10	; 16
 2c2:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 2c4:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
 2c8:	81 ee       	ldi	r24, 0xE1	; 225
 2ca:	94 e0       	ldi	r25, 0x04	; 4
 2cc:	01 97       	sbiw	r24, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <lcd_init+0x4e>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <lcd_init+0x54>
 2d2:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 2d4:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
 2d8:	95 e1       	ldi	r25, 0x15	; 21
 2da:	9a 95       	dec	r25
 2dc:	f1 f7       	brne	.-4      	; 0x2da <lcd_init+0x5c>
 2de:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 2e0:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
 2e4:	85 e1       	ldi	r24, 0x15	; 21
 2e6:	8a 95       	dec	r24
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <lcd_init+0x68>
 2ea:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 2ec:	8b b1       	in	r24, 0x0b	; 11
 2ee:	8f 7e       	andi	r24, 0xEF	; 239
 2f0:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 2f2:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
 2f6:	95 e1       	ldi	r25, 0x15	; 21
 2f8:	9a 95       	dec	r25
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <lcd_init+0x7a>
 2fc:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 2fe:	88 e2       	ldi	r24, 0x28	; 40
 300:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 304:	88 e0       	ldi	r24, 0x08	; 8
 306:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 30a:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 30e:	86 e0       	ldi	r24, 0x06	; 6
 310:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 314:	8c 2f       	mov	r24, r28
 316:	0e 94 0d 01 	call	0x21a	; 0x21a <lcd_command>

}/* lcd_init */
 31a:	cf 91       	pop	r28
 31c:	08 95       	ret

0000031e <init_taster>:

volatile uint16_t random_number = 0;

void init_taster() {
	// Taster als Eingang konfigurieren
	DDRD &= ~(1 << DDD2);  // PD2 als Eingang für T1
 31e:	8a b1       	in	r24, 0x0a	; 10
 320:	8b 7f       	andi	r24, 0xFB	; 251
 322:	8a b9       	out	0x0a, r24	; 10
	DDRD &= ~(1 << DDD3);  // PD3 als Eingang für T2
 324:	8a b1       	in	r24, 0x0a	; 10
 326:	87 7f       	andi	r24, 0xF7	; 247
 328:	8a b9       	out	0x0a, r24	; 10
	
	// Interner Pull-up für die Taster
	PORTD |= (1 << DDD2);  // Pull-up aktivieren für T1
 32a:	8b b1       	in	r24, 0x0b	; 11
 32c:	84 60       	ori	r24, 0x04	; 4
 32e:	8b b9       	out	0x0b, r24	; 11
	PORTD |= (1 << DDD3);  // Pull-up aktivieren für T2
 330:	8b b1       	in	r24, 0x0b	; 11
 332:	88 60       	ori	r24, 0x08	; 8
 334:	8b b9       	out	0x0b, r24	; 11
	
	// Externe Interrupts aktivieren
	EICRA |= (1 << ISC01) | (1 << ISC11);  // Trigger auf fallende Flanke für INT0 und INT1
 336:	e9 e6       	ldi	r30, 0x69	; 105
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	80 81       	ld	r24, Z
 33c:	8a 60       	ori	r24, 0x0A	; 10
 33e:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);    // INT0 und INT1 aktivieren
 340:	8d b3       	in	r24, 0x1d	; 29
 342:	83 60       	ori	r24, 0x03	; 3
 344:	8d bb       	out	0x1d, r24	; 29
	sei();  // Globale Interrupts aktiviere
 346:	78 94       	sei
 348:	08 95       	ret

0000034a <display_number>:
}

void display_number(uint16_t number) {
 34a:	0f 93       	push	r16
 34c:	1f 93       	push	r17
 34e:	cf 93       	push	r28
 350:	df 93       	push	r29
 352:	cd b7       	in	r28, 0x3d	; 61
 354:	de b7       	in	r29, 0x3e	; 62
 356:	60 97       	sbiw	r28, 0x10	; 16
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	18 2f       	mov	r17, r24
 364:	09 2f       	mov	r16, r25
	char buffer[16];
	lcd_clrscr();  // LCD leeren
 366:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_clrscr>
	sprintf(buffer, "Number: %d", number);
 36a:	0f 93       	push	r16
 36c:	1f 93       	push	r17
 36e:	84 e0       	ldi	r24, 0x04	; 4
 370:	91 e0       	ldi	r25, 0x01	; 1
 372:	9f 93       	push	r25
 374:	8f 93       	push	r24
 376:	8e 01       	movw	r16, r28
 378:	0f 5f       	subi	r16, 0xFF	; 255
 37a:	1f 4f       	sbci	r17, 0xFF	; 255
 37c:	1f 93       	push	r17
 37e:	0f 93       	push	r16
 380:	0e 94 da 02 	call	0x5b4	; 0x5b4 <sprintf>
	lcd_puts(buffer);
 384:	c8 01       	movw	r24, r16
 386:	0e 94 30 01 	call	0x260	; 0x260 <lcd_puts>
}
 38a:	0f 90       	pop	r0
 38c:	0f 90       	pop	r0
 38e:	0f 90       	pop	r0
 390:	0f 90       	pop	r0
 392:	0f 90       	pop	r0
 394:	0f 90       	pop	r0
 396:	60 96       	adiw	r28, 0x10	; 16
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	f8 94       	cli
 39c:	de bf       	out	0x3e, r29	; 62
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	cd bf       	out	0x3d, r28	; 61
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	1f 91       	pop	r17
 3a8:	0f 91       	pop	r16
 3aa:	08 95       	ret

000003ac <__vector_1>:

ISR(INT0_vect){//generate new number
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
 3b6:	2f 93       	push	r18
 3b8:	3f 93       	push	r19
 3ba:	4f 93       	push	r20
 3bc:	5f 93       	push	r21
 3be:	6f 93       	push	r22
 3c0:	7f 93       	push	r23
 3c2:	8f 93       	push	r24
 3c4:	9f 93       	push	r25
 3c6:	af 93       	push	r26
 3c8:	bf 93       	push	r27
 3ca:	ef 93       	push	r30
 3cc:	ff 93       	push	r31
	random_number =rand() % 1000;
 3ce:	0e 94 ca 02 	call	0x594	; 0x594 <rand>
 3d2:	68 ee       	ldi	r22, 0xE8	; 232
 3d4:	73 e0       	ldi	r23, 0x03	; 3
 3d6:	0e 94 56 02 	call	0x4ac	; 0x4ac <__divmodhi4>
 3da:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 3de:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
	display_number(random_number);  // Zufallszahl zwischen 0 und 999 auf dem LCD anzeigen
 3e2:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 3e6:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 3ea:	0e 94 a5 01 	call	0x34a	; 0x34a <display_number>
}
 3ee:	ff 91       	pop	r31
 3f0:	ef 91       	pop	r30
 3f2:	bf 91       	pop	r27
 3f4:	af 91       	pop	r26
 3f6:	9f 91       	pop	r25
 3f8:	8f 91       	pop	r24
 3fa:	7f 91       	pop	r23
 3fc:	6f 91       	pop	r22
 3fe:	5f 91       	pop	r21
 400:	4f 91       	pop	r20
 402:	3f 91       	pop	r19
 404:	2f 91       	pop	r18
 406:	0f 90       	pop	r0
 408:	0f be       	out	0x3f, r0	; 63
 40a:	0f 90       	pop	r0
 40c:	1f 90       	pop	r1
 40e:	18 95       	reti

00000410 <__vector_2>:

ISR(INT1_vect){//save current number
 410:	1f 92       	push	r1
 412:	0f 92       	push	r0
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	0f 92       	push	r0
 418:	11 24       	eor	r1, r1
 41a:	2f 93       	push	r18
 41c:	3f 93       	push	r19
 41e:	4f 93       	push	r20
 420:	5f 93       	push	r21
 422:	6f 93       	push	r22
 424:	7f 93       	push	r23
 426:	8f 93       	push	r24
 428:	9f 93       	push	r25
 42a:	af 93       	push	r26
 42c:	bf 93       	push	r27
 42e:	ef 93       	push	r30
 430:	ff 93       	push	r31
	eeprom_update_byte((uint16_t *) 46, random_number);  // Zahl im EEPROM speichern
 432:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <__data_end>
 436:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <__data_end+0x1>
 43a:	8e e2       	ldi	r24, 0x2E	; 46
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	0e 94 95 05 	call	0xb2a	; 0xb2a <eeprom_update_byte>
	
	// Bestätigung auf dem LCD anzeigen
	lcd_clrscr();
 442:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_clrscr>
	lcd_puts("Saved!");
 446:	8f e0       	ldi	r24, 0x0F	; 15
 448:	91 e0       	ldi	r25, 0x01	; 1
 44a:	0e 94 30 01 	call	0x260	; 0x260 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 44e:	2f ef       	ldi	r18, 0xFF	; 255
 450:	83 ed       	ldi	r24, 0xD3	; 211
 452:	90 e3       	ldi	r25, 0x30	; 48
 454:	21 50       	subi	r18, 0x01	; 1
 456:	80 40       	sbci	r24, 0x00	; 0
 458:	90 40       	sbci	r25, 0x00	; 0
 45a:	e1 f7       	brne	.-8      	; 0x454 <__vector_2+0x44>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__vector_2+0x4e>
 45e:	00 00       	nop
	_delay_ms(1000);  // Kurz "Saved!" anzeigen
	display_number(random_number);  // Zahl wieder anzeigen
 460:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 464:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 468:	0e 94 a5 01 	call	0x34a	; 0x34a <display_number>
}
 46c:	ff 91       	pop	r31
 46e:	ef 91       	pop	r30
 470:	bf 91       	pop	r27
 472:	af 91       	pop	r26
 474:	9f 91       	pop	r25
 476:	8f 91       	pop	r24
 478:	7f 91       	pop	r23
 47a:	6f 91       	pop	r22
 47c:	5f 91       	pop	r21
 47e:	4f 91       	pop	r20
 480:	3f 91       	pop	r19
 482:	2f 91       	pop	r18
 484:	0f 90       	pop	r0
 486:	0f be       	out	0x3f, r0	; 63
 488:	0f 90       	pop	r0
 48a:	1f 90       	pop	r1
 48c:	18 95       	reti

0000048e <main>:


int main(void)
{
    init_taster();
 48e:	0e 94 8f 01 	call	0x31e	; 0x31e <init_taster>
	lcd_init(LCD_DISP_ON);
 492:	8c e0       	ldi	r24, 0x0C	; 12
 494:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_init>
	lcd_clrscr();  // LCD löschen
 498:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_clrscr>
	
	uint16_t stored_number = eeprom_read_byte((uint16_t *)46);
 49c:	8e e2       	ldi	r24, 0x2E	; 46
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 8d 05 	call	0xb1a	; 0xb1a <eeprom_read_byte>
	display_number(stored_number);  // Letzte gespeicherte Zahl anzeigen
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 a5 01 	call	0x34a	; 0x34a <display_number>
 4aa:	ff cf       	rjmp	.-2      	; 0x4aa <main+0x1c>

000004ac <__divmodhi4>:
 4ac:	97 fb       	bst	r25, 7
 4ae:	07 2e       	mov	r0, r23
 4b0:	16 f4       	brtc	.+4      	; 0x4b6 <__divmodhi4+0xa>
 4b2:	00 94       	com	r0
 4b4:	07 d0       	rcall	.+14     	; 0x4c4 <__divmodhi4_neg1>
 4b6:	77 fd       	sbrc	r23, 7
 4b8:	09 d0       	rcall	.+18     	; 0x4cc <__divmodhi4_neg2>
 4ba:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__udivmodhi4>
 4be:	07 fc       	sbrc	r0, 7
 4c0:	05 d0       	rcall	.+10     	; 0x4cc <__divmodhi4_neg2>
 4c2:	3e f4       	brtc	.+14     	; 0x4d2 <__divmodhi4_exit>

000004c4 <__divmodhi4_neg1>:
 4c4:	90 95       	com	r25
 4c6:	81 95       	neg	r24
 4c8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ca:	08 95       	ret

000004cc <__divmodhi4_neg2>:
 4cc:	70 95       	com	r23
 4ce:	61 95       	neg	r22
 4d0:	7f 4f       	sbci	r23, 0xFF	; 255

000004d2 <__divmodhi4_exit>:
 4d2:	08 95       	ret

000004d4 <__udivmodhi4>:
 4d4:	aa 1b       	sub	r26, r26
 4d6:	bb 1b       	sub	r27, r27
 4d8:	51 e1       	ldi	r21, 0x11	; 17
 4da:	07 c0       	rjmp	.+14     	; 0x4ea <__udivmodhi4_ep>

000004dc <__udivmodhi4_loop>:
 4dc:	aa 1f       	adc	r26, r26
 4de:	bb 1f       	adc	r27, r27
 4e0:	a6 17       	cp	r26, r22
 4e2:	b7 07       	cpc	r27, r23
 4e4:	10 f0       	brcs	.+4      	; 0x4ea <__udivmodhi4_ep>
 4e6:	a6 1b       	sub	r26, r22
 4e8:	b7 0b       	sbc	r27, r23

000004ea <__udivmodhi4_ep>:
 4ea:	88 1f       	adc	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	5a 95       	dec	r21
 4f0:	a9 f7       	brne	.-22     	; 0x4dc <__udivmodhi4_loop>
 4f2:	80 95       	com	r24
 4f4:	90 95       	com	r25
 4f6:	bc 01       	movw	r22, r24
 4f8:	cd 01       	movw	r24, r26
 4fa:	08 95       	ret

000004fc <do_rand>:
 4fc:	8f 92       	push	r8
 4fe:	9f 92       	push	r9
 500:	af 92       	push	r10
 502:	bf 92       	push	r11
 504:	cf 92       	push	r12
 506:	df 92       	push	r13
 508:	ef 92       	push	r14
 50a:	ff 92       	push	r15
 50c:	cf 93       	push	r28
 50e:	df 93       	push	r29
 510:	ec 01       	movw	r28, r24
 512:	68 81       	ld	r22, Y
 514:	79 81       	ldd	r23, Y+1	; 0x01
 516:	8a 81       	ldd	r24, Y+2	; 0x02
 518:	9b 81       	ldd	r25, Y+3	; 0x03
 51a:	61 15       	cp	r22, r1
 51c:	71 05       	cpc	r23, r1
 51e:	81 05       	cpc	r24, r1
 520:	91 05       	cpc	r25, r1
 522:	21 f4       	brne	.+8      	; 0x52c <do_rand+0x30>
 524:	64 e2       	ldi	r22, 0x24	; 36
 526:	79 ed       	ldi	r23, 0xD9	; 217
 528:	8b e5       	ldi	r24, 0x5B	; 91
 52a:	97 e0       	ldi	r25, 0x07	; 7
 52c:	2d e1       	ldi	r18, 0x1D	; 29
 52e:	33 ef       	ldi	r19, 0xF3	; 243
 530:	41 e0       	ldi	r20, 0x01	; 1
 532:	50 e0       	ldi	r21, 0x00	; 0
 534:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__divmodsi4>
 538:	49 01       	movw	r8, r18
 53a:	5a 01       	movw	r10, r20
 53c:	9b 01       	movw	r18, r22
 53e:	ac 01       	movw	r20, r24
 540:	a7 ea       	ldi	r26, 0xA7	; 167
 542:	b1 e4       	ldi	r27, 0x41	; 65
 544:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__muluhisi3>
 548:	6b 01       	movw	r12, r22
 54a:	7c 01       	movw	r14, r24
 54c:	ac ee       	ldi	r26, 0xEC	; 236
 54e:	b4 ef       	ldi	r27, 0xF4	; 244
 550:	a5 01       	movw	r20, r10
 552:	94 01       	movw	r18, r8
 554:	0e 94 d4 05 	call	0xba8	; 0xba8 <__mulohisi3>
 558:	dc 01       	movw	r26, r24
 55a:	cb 01       	movw	r24, r22
 55c:	8c 0d       	add	r24, r12
 55e:	9d 1d       	adc	r25, r13
 560:	ae 1d       	adc	r26, r14
 562:	bf 1d       	adc	r27, r15
 564:	b7 ff       	sbrs	r27, 7
 566:	03 c0       	rjmp	.+6      	; 0x56e <do_rand+0x72>
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	a1 09       	sbc	r26, r1
 56c:	b0 48       	sbci	r27, 0x80	; 128
 56e:	88 83       	st	Y, r24
 570:	99 83       	std	Y+1, r25	; 0x01
 572:	aa 83       	std	Y+2, r26	; 0x02
 574:	bb 83       	std	Y+3, r27	; 0x03
 576:	9f 77       	andi	r25, 0x7F	; 127
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	ff 90       	pop	r15
 57e:	ef 90       	pop	r14
 580:	df 90       	pop	r13
 582:	cf 90       	pop	r12
 584:	bf 90       	pop	r11
 586:	af 90       	pop	r10
 588:	9f 90       	pop	r9
 58a:	8f 90       	pop	r8
 58c:	08 95       	ret

0000058e <rand_r>:
 58e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <do_rand>
 592:	08 95       	ret

00000594 <rand>:
 594:	80 e0       	ldi	r24, 0x00	; 0
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	0e 94 7e 02 	call	0x4fc	; 0x4fc <do_rand>
 59c:	08 95       	ret

0000059e <srand>:
 59e:	a0 e0       	ldi	r26, 0x00	; 0
 5a0:	b0 e0       	ldi	r27, 0x00	; 0
 5a2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 5a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5aa:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 5ae:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 5b2:	08 95       	ret

000005b4 <sprintf>:
 5b4:	ae e0       	ldi	r26, 0x0E	; 14
 5b6:	b0 e0       	ldi	r27, 0x00	; 0
 5b8:	e0 ee       	ldi	r30, 0xE0	; 224
 5ba:	f2 e0       	ldi	r31, 0x02	; 2
 5bc:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__prologue_saves__+0x1c>
 5c0:	0d 89       	ldd	r16, Y+21	; 0x15
 5c2:	1e 89       	ldd	r17, Y+22	; 0x16
 5c4:	86 e0       	ldi	r24, 0x06	; 6
 5c6:	8c 83       	std	Y+4, r24	; 0x04
 5c8:	1a 83       	std	Y+2, r17	; 0x02
 5ca:	09 83       	std	Y+1, r16	; 0x01
 5cc:	8f ef       	ldi	r24, 0xFF	; 255
 5ce:	9f e7       	ldi	r25, 0x7F	; 127
 5d0:	9e 83       	std	Y+6, r25	; 0x06
 5d2:	8d 83       	std	Y+5, r24	; 0x05
 5d4:	ae 01       	movw	r20, r28
 5d6:	47 5e       	subi	r20, 0xE7	; 231
 5d8:	5f 4f       	sbci	r21, 0xFF	; 255
 5da:	6f 89       	ldd	r22, Y+23	; 0x17
 5dc:	78 8d       	ldd	r23, Y+24	; 0x18
 5de:	ce 01       	movw	r24, r28
 5e0:	01 96       	adiw	r24, 0x01	; 1
 5e2:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <vfprintf>
 5e6:	ef 81       	ldd	r30, Y+7	; 0x07
 5e8:	f8 85       	ldd	r31, Y+8	; 0x08
 5ea:	e0 0f       	add	r30, r16
 5ec:	f1 1f       	adc	r31, r17
 5ee:	10 82       	st	Z, r1
 5f0:	2e 96       	adiw	r28, 0x0e	; 14
 5f2:	e4 e0       	ldi	r30, 0x04	; 4
 5f4:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__epilogue_restores__+0x1c>

000005f8 <vfprintf>:
 5f8:	ab e0       	ldi	r26, 0x0B	; 11
 5fa:	b0 e0       	ldi	r27, 0x00	; 0
 5fc:	e2 e0       	ldi	r30, 0x02	; 2
 5fe:	f3 e0       	ldi	r31, 0x03	; 3
 600:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <__prologue_saves__>
 604:	6c 01       	movw	r12, r24
 606:	7b 01       	movw	r14, r22
 608:	8a 01       	movw	r16, r20
 60a:	fc 01       	movw	r30, r24
 60c:	17 82       	std	Z+7, r1	; 0x07
 60e:	16 82       	std	Z+6, r1	; 0x06
 610:	83 81       	ldd	r24, Z+3	; 0x03
 612:	81 ff       	sbrs	r24, 1
 614:	cc c1       	rjmp	.+920    	; 0x9ae <__stack+0xaf>
 616:	ce 01       	movw	r24, r28
 618:	01 96       	adiw	r24, 0x01	; 1
 61a:	3c 01       	movw	r6, r24
 61c:	f6 01       	movw	r30, r12
 61e:	93 81       	ldd	r25, Z+3	; 0x03
 620:	f7 01       	movw	r30, r14
 622:	93 fd       	sbrc	r25, 3
 624:	85 91       	lpm	r24, Z+
 626:	93 ff       	sbrs	r25, 3
 628:	81 91       	ld	r24, Z+
 62a:	7f 01       	movw	r14, r30
 62c:	88 23       	and	r24, r24
 62e:	09 f4       	brne	.+2      	; 0x632 <vfprintf+0x3a>
 630:	ba c1       	rjmp	.+884    	; 0x9a6 <__stack+0xa7>
 632:	85 32       	cpi	r24, 0x25	; 37
 634:	39 f4       	brne	.+14     	; 0x644 <vfprintf+0x4c>
 636:	93 fd       	sbrc	r25, 3
 638:	85 91       	lpm	r24, Z+
 63a:	93 ff       	sbrs	r25, 3
 63c:	81 91       	ld	r24, Z+
 63e:	7f 01       	movw	r14, r30
 640:	85 32       	cpi	r24, 0x25	; 37
 642:	29 f4       	brne	.+10     	; 0x64e <vfprintf+0x56>
 644:	b6 01       	movw	r22, r12
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 64c:	e7 cf       	rjmp	.-50     	; 0x61c <vfprintf+0x24>
 64e:	91 2c       	mov	r9, r1
 650:	21 2c       	mov	r2, r1
 652:	31 2c       	mov	r3, r1
 654:	ff e1       	ldi	r31, 0x1F	; 31
 656:	f3 15       	cp	r31, r3
 658:	d8 f0       	brcs	.+54     	; 0x690 <vfprintf+0x98>
 65a:	8b 32       	cpi	r24, 0x2B	; 43
 65c:	79 f0       	breq	.+30     	; 0x67c <vfprintf+0x84>
 65e:	38 f4       	brcc	.+14     	; 0x66e <vfprintf+0x76>
 660:	80 32       	cpi	r24, 0x20	; 32
 662:	79 f0       	breq	.+30     	; 0x682 <vfprintf+0x8a>
 664:	83 32       	cpi	r24, 0x23	; 35
 666:	a1 f4       	brne	.+40     	; 0x690 <vfprintf+0x98>
 668:	23 2d       	mov	r18, r3
 66a:	20 61       	ori	r18, 0x10	; 16
 66c:	1d c0       	rjmp	.+58     	; 0x6a8 <vfprintf+0xb0>
 66e:	8d 32       	cpi	r24, 0x2D	; 45
 670:	61 f0       	breq	.+24     	; 0x68a <vfprintf+0x92>
 672:	80 33       	cpi	r24, 0x30	; 48
 674:	69 f4       	brne	.+26     	; 0x690 <vfprintf+0x98>
 676:	23 2d       	mov	r18, r3
 678:	21 60       	ori	r18, 0x01	; 1
 67a:	16 c0       	rjmp	.+44     	; 0x6a8 <vfprintf+0xb0>
 67c:	83 2d       	mov	r24, r3
 67e:	82 60       	ori	r24, 0x02	; 2
 680:	38 2e       	mov	r3, r24
 682:	e3 2d       	mov	r30, r3
 684:	e4 60       	ori	r30, 0x04	; 4
 686:	3e 2e       	mov	r3, r30
 688:	2a c0       	rjmp	.+84     	; 0x6de <vfprintf+0xe6>
 68a:	f3 2d       	mov	r31, r3
 68c:	f8 60       	ori	r31, 0x08	; 8
 68e:	1d c0       	rjmp	.+58     	; 0x6ca <vfprintf+0xd2>
 690:	37 fc       	sbrc	r3, 7
 692:	2d c0       	rjmp	.+90     	; 0x6ee <vfprintf+0xf6>
 694:	20 ed       	ldi	r18, 0xD0	; 208
 696:	28 0f       	add	r18, r24
 698:	2a 30       	cpi	r18, 0x0A	; 10
 69a:	40 f0       	brcs	.+16     	; 0x6ac <vfprintf+0xb4>
 69c:	8e 32       	cpi	r24, 0x2E	; 46
 69e:	b9 f4       	brne	.+46     	; 0x6ce <vfprintf+0xd6>
 6a0:	36 fc       	sbrc	r3, 6
 6a2:	81 c1       	rjmp	.+770    	; 0x9a6 <__stack+0xa7>
 6a4:	23 2d       	mov	r18, r3
 6a6:	20 64       	ori	r18, 0x40	; 64
 6a8:	32 2e       	mov	r3, r18
 6aa:	19 c0       	rjmp	.+50     	; 0x6de <vfprintf+0xe6>
 6ac:	36 fe       	sbrs	r3, 6
 6ae:	06 c0       	rjmp	.+12     	; 0x6bc <vfprintf+0xc4>
 6b0:	8a e0       	ldi	r24, 0x0A	; 10
 6b2:	98 9e       	mul	r9, r24
 6b4:	20 0d       	add	r18, r0
 6b6:	11 24       	eor	r1, r1
 6b8:	92 2e       	mov	r9, r18
 6ba:	11 c0       	rjmp	.+34     	; 0x6de <vfprintf+0xe6>
 6bc:	ea e0       	ldi	r30, 0x0A	; 10
 6be:	2e 9e       	mul	r2, r30
 6c0:	20 0d       	add	r18, r0
 6c2:	11 24       	eor	r1, r1
 6c4:	22 2e       	mov	r2, r18
 6c6:	f3 2d       	mov	r31, r3
 6c8:	f0 62       	ori	r31, 0x20	; 32
 6ca:	3f 2e       	mov	r3, r31
 6cc:	08 c0       	rjmp	.+16     	; 0x6de <vfprintf+0xe6>
 6ce:	8c 36       	cpi	r24, 0x6C	; 108
 6d0:	21 f4       	brne	.+8      	; 0x6da <vfprintf+0xe2>
 6d2:	83 2d       	mov	r24, r3
 6d4:	80 68       	ori	r24, 0x80	; 128
 6d6:	38 2e       	mov	r3, r24
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <vfprintf+0xe6>
 6da:	88 36       	cpi	r24, 0x68	; 104
 6dc:	41 f4       	brne	.+16     	; 0x6ee <vfprintf+0xf6>
 6de:	f7 01       	movw	r30, r14
 6e0:	93 fd       	sbrc	r25, 3
 6e2:	85 91       	lpm	r24, Z+
 6e4:	93 ff       	sbrs	r25, 3
 6e6:	81 91       	ld	r24, Z+
 6e8:	7f 01       	movw	r14, r30
 6ea:	81 11       	cpse	r24, r1
 6ec:	b3 cf       	rjmp	.-154    	; 0x654 <vfprintf+0x5c>
 6ee:	98 2f       	mov	r25, r24
 6f0:	9f 7d       	andi	r25, 0xDF	; 223
 6f2:	95 54       	subi	r25, 0x45	; 69
 6f4:	93 30       	cpi	r25, 0x03	; 3
 6f6:	28 f4       	brcc	.+10     	; 0x702 <vfprintf+0x10a>
 6f8:	0c 5f       	subi	r16, 0xFC	; 252
 6fa:	1f 4f       	sbci	r17, 0xFF	; 255
 6fc:	9f e3       	ldi	r25, 0x3F	; 63
 6fe:	99 83       	std	Y+1, r25	; 0x01
 700:	0d c0       	rjmp	.+26     	; 0x71c <vfprintf+0x124>
 702:	83 36       	cpi	r24, 0x63	; 99
 704:	31 f0       	breq	.+12     	; 0x712 <vfprintf+0x11a>
 706:	83 37       	cpi	r24, 0x73	; 115
 708:	71 f0       	breq	.+28     	; 0x726 <vfprintf+0x12e>
 70a:	83 35       	cpi	r24, 0x53	; 83
 70c:	09 f0       	breq	.+2      	; 0x710 <vfprintf+0x118>
 70e:	59 c0       	rjmp	.+178    	; 0x7c2 <vfprintf+0x1ca>
 710:	21 c0       	rjmp	.+66     	; 0x754 <vfprintf+0x15c>
 712:	f8 01       	movw	r30, r16
 714:	80 81       	ld	r24, Z
 716:	89 83       	std	Y+1, r24	; 0x01
 718:	0e 5f       	subi	r16, 0xFE	; 254
 71a:	1f 4f       	sbci	r17, 0xFF	; 255
 71c:	88 24       	eor	r8, r8
 71e:	83 94       	inc	r8
 720:	91 2c       	mov	r9, r1
 722:	53 01       	movw	r10, r6
 724:	13 c0       	rjmp	.+38     	; 0x74c <vfprintf+0x154>
 726:	28 01       	movw	r4, r16
 728:	f2 e0       	ldi	r31, 0x02	; 2
 72a:	4f 0e       	add	r4, r31
 72c:	51 1c       	adc	r5, r1
 72e:	f8 01       	movw	r30, r16
 730:	a0 80       	ld	r10, Z
 732:	b1 80       	ldd	r11, Z+1	; 0x01
 734:	36 fe       	sbrs	r3, 6
 736:	03 c0       	rjmp	.+6      	; 0x73e <vfprintf+0x146>
 738:	69 2d       	mov	r22, r9
 73a:	70 e0       	ldi	r23, 0x00	; 0
 73c:	02 c0       	rjmp	.+4      	; 0x742 <vfprintf+0x14a>
 73e:	6f ef       	ldi	r22, 0xFF	; 255
 740:	7f ef       	ldi	r23, 0xFF	; 255
 742:	c5 01       	movw	r24, r10
 744:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <strnlen>
 748:	4c 01       	movw	r8, r24
 74a:	82 01       	movw	r16, r4
 74c:	f3 2d       	mov	r31, r3
 74e:	ff 77       	andi	r31, 0x7F	; 127
 750:	3f 2e       	mov	r3, r31
 752:	16 c0       	rjmp	.+44     	; 0x780 <vfprintf+0x188>
 754:	28 01       	movw	r4, r16
 756:	22 e0       	ldi	r18, 0x02	; 2
 758:	42 0e       	add	r4, r18
 75a:	51 1c       	adc	r5, r1
 75c:	f8 01       	movw	r30, r16
 75e:	a0 80       	ld	r10, Z
 760:	b1 80       	ldd	r11, Z+1	; 0x01
 762:	36 fe       	sbrs	r3, 6
 764:	03 c0       	rjmp	.+6      	; 0x76c <vfprintf+0x174>
 766:	69 2d       	mov	r22, r9
 768:	70 e0       	ldi	r23, 0x00	; 0
 76a:	02 c0       	rjmp	.+4      	; 0x770 <vfprintf+0x178>
 76c:	6f ef       	ldi	r22, 0xFF	; 255
 76e:	7f ef       	ldi	r23, 0xFF	; 255
 770:	c5 01       	movw	r24, r10
 772:	0e 94 dd 04 	call	0x9ba	; 0x9ba <strnlen_P>
 776:	4c 01       	movw	r8, r24
 778:	f3 2d       	mov	r31, r3
 77a:	f0 68       	ori	r31, 0x80	; 128
 77c:	3f 2e       	mov	r3, r31
 77e:	82 01       	movw	r16, r4
 780:	33 fc       	sbrc	r3, 3
 782:	1b c0       	rjmp	.+54     	; 0x7ba <vfprintf+0x1c2>
 784:	82 2d       	mov	r24, r2
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	88 16       	cp	r8, r24
 78a:	99 06       	cpc	r9, r25
 78c:	b0 f4       	brcc	.+44     	; 0x7ba <vfprintf+0x1c2>
 78e:	b6 01       	movw	r22, r12
 790:	80 e2       	ldi	r24, 0x20	; 32
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 798:	2a 94       	dec	r2
 79a:	f4 cf       	rjmp	.-24     	; 0x784 <vfprintf+0x18c>
 79c:	f5 01       	movw	r30, r10
 79e:	37 fc       	sbrc	r3, 7
 7a0:	85 91       	lpm	r24, Z+
 7a2:	37 fe       	sbrs	r3, 7
 7a4:	81 91       	ld	r24, Z+
 7a6:	5f 01       	movw	r10, r30
 7a8:	b6 01       	movw	r22, r12
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 7b0:	21 10       	cpse	r2, r1
 7b2:	2a 94       	dec	r2
 7b4:	21 e0       	ldi	r18, 0x01	; 1
 7b6:	82 1a       	sub	r8, r18
 7b8:	91 08       	sbc	r9, r1
 7ba:	81 14       	cp	r8, r1
 7bc:	91 04       	cpc	r9, r1
 7be:	71 f7       	brne	.-36     	; 0x79c <vfprintf+0x1a4>
 7c0:	e8 c0       	rjmp	.+464    	; 0x992 <__stack+0x93>
 7c2:	84 36       	cpi	r24, 0x64	; 100
 7c4:	11 f0       	breq	.+4      	; 0x7ca <vfprintf+0x1d2>
 7c6:	89 36       	cpi	r24, 0x69	; 105
 7c8:	41 f5       	brne	.+80     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7ca:	f8 01       	movw	r30, r16
 7cc:	37 fe       	sbrs	r3, 7
 7ce:	07 c0       	rjmp	.+14     	; 0x7de <vfprintf+0x1e6>
 7d0:	60 81       	ld	r22, Z
 7d2:	71 81       	ldd	r23, Z+1	; 0x01
 7d4:	82 81       	ldd	r24, Z+2	; 0x02
 7d6:	93 81       	ldd	r25, Z+3	; 0x03
 7d8:	0c 5f       	subi	r16, 0xFC	; 252
 7da:	1f 4f       	sbci	r17, 0xFF	; 255
 7dc:	08 c0       	rjmp	.+16     	; 0x7ee <vfprintf+0x1f6>
 7de:	60 81       	ld	r22, Z
 7e0:	71 81       	ldd	r23, Z+1	; 0x01
 7e2:	07 2e       	mov	r0, r23
 7e4:	00 0c       	add	r0, r0
 7e6:	88 0b       	sbc	r24, r24
 7e8:	99 0b       	sbc	r25, r25
 7ea:	0e 5f       	subi	r16, 0xFE	; 254
 7ec:	1f 4f       	sbci	r17, 0xFF	; 255
 7ee:	f3 2d       	mov	r31, r3
 7f0:	ff 76       	andi	r31, 0x6F	; 111
 7f2:	3f 2e       	mov	r3, r31
 7f4:	97 ff       	sbrs	r25, 7
 7f6:	09 c0       	rjmp	.+18     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7f8:	90 95       	com	r25
 7fa:	80 95       	com	r24
 7fc:	70 95       	com	r23
 7fe:	61 95       	neg	r22
 800:	7f 4f       	sbci	r23, 0xFF	; 255
 802:	8f 4f       	sbci	r24, 0xFF	; 255
 804:	9f 4f       	sbci	r25, 0xFF	; 255
 806:	f0 68       	ori	r31, 0x80	; 128
 808:	3f 2e       	mov	r3, r31
 80a:	2a e0       	ldi	r18, 0x0A	; 10
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	a3 01       	movw	r20, r6
 810:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__ultoa_invert>
 814:	88 2e       	mov	r8, r24
 816:	86 18       	sub	r8, r6
 818:	45 c0       	rjmp	.+138    	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 81a:	85 37       	cpi	r24, 0x75	; 117
 81c:	31 f4       	brne	.+12     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 81e:	23 2d       	mov	r18, r3
 820:	2f 7e       	andi	r18, 0xEF	; 239
 822:	b2 2e       	mov	r11, r18
 824:	2a e0       	ldi	r18, 0x0A	; 10
 826:	30 e0       	ldi	r19, 0x00	; 0
 828:	25 c0       	rjmp	.+74     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 82a:	93 2d       	mov	r25, r3
 82c:	99 7f       	andi	r25, 0xF9	; 249
 82e:	b9 2e       	mov	r11, r25
 830:	8f 36       	cpi	r24, 0x6F	; 111
 832:	c1 f0       	breq	.+48     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 834:	18 f4       	brcc	.+6      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 836:	88 35       	cpi	r24, 0x58	; 88
 838:	79 f0       	breq	.+30     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 83a:	b5 c0       	rjmp	.+362    	; 0x9a6 <__stack+0xa7>
 83c:	80 37       	cpi	r24, 0x70	; 112
 83e:	19 f0       	breq	.+6      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 840:	88 37       	cpi	r24, 0x78	; 120
 842:	21 f0       	breq	.+8      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 844:	b0 c0       	rjmp	.+352    	; 0x9a6 <__stack+0xa7>
 846:	e9 2f       	mov	r30, r25
 848:	e0 61       	ori	r30, 0x10	; 16
 84a:	be 2e       	mov	r11, r30
 84c:	b4 fe       	sbrs	r11, 4
 84e:	0d c0       	rjmp	.+26     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 850:	fb 2d       	mov	r31, r11
 852:	f4 60       	ori	r31, 0x04	; 4
 854:	bf 2e       	mov	r11, r31
 856:	09 c0       	rjmp	.+18     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 858:	34 fe       	sbrs	r3, 4
 85a:	0a c0       	rjmp	.+20     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 85c:	29 2f       	mov	r18, r25
 85e:	26 60       	ori	r18, 0x06	; 6
 860:	b2 2e       	mov	r11, r18
 862:	06 c0       	rjmp	.+12     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 864:	28 e0       	ldi	r18, 0x08	; 8
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	05 c0       	rjmp	.+10     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 86a:	20 e1       	ldi	r18, 0x10	; 16
 86c:	30 e0       	ldi	r19, 0x00	; 0
 86e:	02 c0       	rjmp	.+4      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 870:	20 e1       	ldi	r18, 0x10	; 16
 872:	32 e0       	ldi	r19, 0x02	; 2
 874:	f8 01       	movw	r30, r16
 876:	b7 fe       	sbrs	r11, 7
 878:	07 c0       	rjmp	.+14     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 87a:	60 81       	ld	r22, Z
 87c:	71 81       	ldd	r23, Z+1	; 0x01
 87e:	82 81       	ldd	r24, Z+2	; 0x02
 880:	93 81       	ldd	r25, Z+3	; 0x03
 882:	0c 5f       	subi	r16, 0xFC	; 252
 884:	1f 4f       	sbci	r17, 0xFF	; 255
 886:	06 c0       	rjmp	.+12     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 888:	60 81       	ld	r22, Z
 88a:	71 81       	ldd	r23, Z+1	; 0x01
 88c:	80 e0       	ldi	r24, 0x00	; 0
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 5f       	subi	r16, 0xFE	; 254
 892:	1f 4f       	sbci	r17, 0xFF	; 255
 894:	a3 01       	movw	r20, r6
 896:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__ultoa_invert>
 89a:	88 2e       	mov	r8, r24
 89c:	86 18       	sub	r8, r6
 89e:	fb 2d       	mov	r31, r11
 8a0:	ff 77       	andi	r31, 0x7F	; 127
 8a2:	3f 2e       	mov	r3, r31
 8a4:	36 fe       	sbrs	r3, 6
 8a6:	0d c0       	rjmp	.+26     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8a8:	23 2d       	mov	r18, r3
 8aa:	2e 7f       	andi	r18, 0xFE	; 254
 8ac:	a2 2e       	mov	r10, r18
 8ae:	89 14       	cp	r8, r9
 8b0:	58 f4       	brcc	.+22     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8b2:	34 fe       	sbrs	r3, 4
 8b4:	0b c0       	rjmp	.+22     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8b6:	32 fc       	sbrc	r3, 2
 8b8:	09 c0       	rjmp	.+18     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8ba:	83 2d       	mov	r24, r3
 8bc:	8e 7e       	andi	r24, 0xEE	; 238
 8be:	a8 2e       	mov	r10, r24
 8c0:	05 c0       	rjmp	.+10     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8c2:	b8 2c       	mov	r11, r8
 8c4:	a3 2c       	mov	r10, r3
 8c6:	03 c0       	rjmp	.+6      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8c8:	b8 2c       	mov	r11, r8
 8ca:	01 c0       	rjmp	.+2      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8cc:	b9 2c       	mov	r11, r9
 8ce:	a4 fe       	sbrs	r10, 4
 8d0:	0f c0       	rjmp	.+30     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 8d2:	fe 01       	movw	r30, r28
 8d4:	e8 0d       	add	r30, r8
 8d6:	f1 1d       	adc	r31, r1
 8d8:	80 81       	ld	r24, Z
 8da:	80 33       	cpi	r24, 0x30	; 48
 8dc:	21 f4       	brne	.+8      	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 8de:	9a 2d       	mov	r25, r10
 8e0:	99 7e       	andi	r25, 0xE9	; 233
 8e2:	a9 2e       	mov	r10, r25
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8e6:	a2 fe       	sbrs	r10, 2
 8e8:	06 c0       	rjmp	.+12     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8ea:	b3 94       	inc	r11
 8ec:	b3 94       	inc	r11
 8ee:	04 c0       	rjmp	.+8      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8f0:	8a 2d       	mov	r24, r10
 8f2:	86 78       	andi	r24, 0x86	; 134
 8f4:	09 f0       	breq	.+2      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8f6:	b3 94       	inc	r11
 8f8:	a3 fc       	sbrc	r10, 3
 8fa:	11 c0       	rjmp	.+34     	; 0x91e <__stack+0x1f>
 8fc:	a0 fe       	sbrs	r10, 0
 8fe:	06 c0       	rjmp	.+12     	; 0x90c <__stack+0xd>
 900:	b2 14       	cp	r11, r2
 902:	88 f4       	brcc	.+34     	; 0x926 <__stack+0x27>
 904:	28 0c       	add	r2, r8
 906:	92 2c       	mov	r9, r2
 908:	9b 18       	sub	r9, r11
 90a:	0e c0       	rjmp	.+28     	; 0x928 <__stack+0x29>
 90c:	b2 14       	cp	r11, r2
 90e:	60 f4       	brcc	.+24     	; 0x928 <__stack+0x29>
 910:	b6 01       	movw	r22, r12
 912:	80 e2       	ldi	r24, 0x20	; 32
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 91a:	b3 94       	inc	r11
 91c:	f7 cf       	rjmp	.-18     	; 0x90c <__stack+0xd>
 91e:	b2 14       	cp	r11, r2
 920:	18 f4       	brcc	.+6      	; 0x928 <__stack+0x29>
 922:	2b 18       	sub	r2, r11
 924:	02 c0       	rjmp	.+4      	; 0x92a <__stack+0x2b>
 926:	98 2c       	mov	r9, r8
 928:	21 2c       	mov	r2, r1
 92a:	a4 fe       	sbrs	r10, 4
 92c:	10 c0       	rjmp	.+32     	; 0x94e <__stack+0x4f>
 92e:	b6 01       	movw	r22, r12
 930:	80 e3       	ldi	r24, 0x30	; 48
 932:	90 e0       	ldi	r25, 0x00	; 0
 934:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 938:	a2 fe       	sbrs	r10, 2
 93a:	17 c0       	rjmp	.+46     	; 0x96a <__stack+0x6b>
 93c:	a1 fc       	sbrc	r10, 1
 93e:	03 c0       	rjmp	.+6      	; 0x946 <__stack+0x47>
 940:	88 e7       	ldi	r24, 0x78	; 120
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	02 c0       	rjmp	.+4      	; 0x94a <__stack+0x4b>
 946:	88 e5       	ldi	r24, 0x58	; 88
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	b6 01       	movw	r22, r12
 94c:	0c c0       	rjmp	.+24     	; 0x966 <__stack+0x67>
 94e:	8a 2d       	mov	r24, r10
 950:	86 78       	andi	r24, 0x86	; 134
 952:	59 f0       	breq	.+22     	; 0x96a <__stack+0x6b>
 954:	a1 fe       	sbrs	r10, 1
 956:	02 c0       	rjmp	.+4      	; 0x95c <__stack+0x5d>
 958:	8b e2       	ldi	r24, 0x2B	; 43
 95a:	01 c0       	rjmp	.+2      	; 0x95e <__stack+0x5f>
 95c:	80 e2       	ldi	r24, 0x20	; 32
 95e:	a7 fc       	sbrc	r10, 7
 960:	8d e2       	ldi	r24, 0x2D	; 45
 962:	b6 01       	movw	r22, r12
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 96a:	89 14       	cp	r8, r9
 96c:	38 f4       	brcc	.+14     	; 0x97c <__stack+0x7d>
 96e:	b6 01       	movw	r22, r12
 970:	80 e3       	ldi	r24, 0x30	; 48
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 978:	9a 94       	dec	r9
 97a:	f7 cf       	rjmp	.-18     	; 0x96a <__stack+0x6b>
 97c:	8a 94       	dec	r8
 97e:	f3 01       	movw	r30, r6
 980:	e8 0d       	add	r30, r8
 982:	f1 1d       	adc	r31, r1
 984:	80 81       	ld	r24, Z
 986:	b6 01       	movw	r22, r12
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 98e:	81 10       	cpse	r8, r1
 990:	f5 cf       	rjmp	.-22     	; 0x97c <__stack+0x7d>
 992:	22 20       	and	r2, r2
 994:	09 f4       	brne	.+2      	; 0x998 <__stack+0x99>
 996:	42 ce       	rjmp	.-892    	; 0x61c <vfprintf+0x24>
 998:	b6 01       	movw	r22, r12
 99a:	80 e2       	ldi	r24, 0x20	; 32
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fputc>
 9a2:	2a 94       	dec	r2
 9a4:	f6 cf       	rjmp	.-20     	; 0x992 <__stack+0x93>
 9a6:	f6 01       	movw	r30, r12
 9a8:	86 81       	ldd	r24, Z+6	; 0x06
 9aa:	97 81       	ldd	r25, Z+7	; 0x07
 9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <__stack+0xb3>
 9ae:	8f ef       	ldi	r24, 0xFF	; 255
 9b0:	9f ef       	ldi	r25, 0xFF	; 255
 9b2:	2b 96       	adiw	r28, 0x0b	; 11
 9b4:	e2 e1       	ldi	r30, 0x12	; 18
 9b6:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__epilogue_restores__>

000009ba <strnlen_P>:
 9ba:	fc 01       	movw	r30, r24
 9bc:	05 90       	lpm	r0, Z+
 9be:	61 50       	subi	r22, 0x01	; 1
 9c0:	70 40       	sbci	r23, 0x00	; 0
 9c2:	01 10       	cpse	r0, r1
 9c4:	d8 f7       	brcc	.-10     	; 0x9bc <strnlen_P+0x2>
 9c6:	80 95       	com	r24
 9c8:	90 95       	com	r25
 9ca:	8e 0f       	add	r24, r30
 9cc:	9f 1f       	adc	r25, r31
 9ce:	08 95       	ret

000009d0 <strnlen>:
 9d0:	fc 01       	movw	r30, r24
 9d2:	61 50       	subi	r22, 0x01	; 1
 9d4:	70 40       	sbci	r23, 0x00	; 0
 9d6:	01 90       	ld	r0, Z+
 9d8:	01 10       	cpse	r0, r1
 9da:	d8 f7       	brcc	.-10     	; 0x9d2 <strnlen+0x2>
 9dc:	80 95       	com	r24
 9de:	90 95       	com	r25
 9e0:	8e 0f       	add	r24, r30
 9e2:	9f 1f       	adc	r25, r31
 9e4:	08 95       	ret

000009e6 <fputc>:
 9e6:	0f 93       	push	r16
 9e8:	1f 93       	push	r17
 9ea:	cf 93       	push	r28
 9ec:	df 93       	push	r29
 9ee:	fb 01       	movw	r30, r22
 9f0:	23 81       	ldd	r18, Z+3	; 0x03
 9f2:	21 fd       	sbrc	r18, 1
 9f4:	03 c0       	rjmp	.+6      	; 0x9fc <fputc+0x16>
 9f6:	8f ef       	ldi	r24, 0xFF	; 255
 9f8:	9f ef       	ldi	r25, 0xFF	; 255
 9fa:	2c c0       	rjmp	.+88     	; 0xa54 <fputc+0x6e>
 9fc:	22 ff       	sbrs	r18, 2
 9fe:	16 c0       	rjmp	.+44     	; 0xa2c <fputc+0x46>
 a00:	46 81       	ldd	r20, Z+6	; 0x06
 a02:	57 81       	ldd	r21, Z+7	; 0x07
 a04:	24 81       	ldd	r18, Z+4	; 0x04
 a06:	35 81       	ldd	r19, Z+5	; 0x05
 a08:	42 17       	cp	r20, r18
 a0a:	53 07       	cpc	r21, r19
 a0c:	44 f4       	brge	.+16     	; 0xa1e <fputc+0x38>
 a0e:	a0 81       	ld	r26, Z
 a10:	b1 81       	ldd	r27, Z+1	; 0x01
 a12:	9d 01       	movw	r18, r26
 a14:	2f 5f       	subi	r18, 0xFF	; 255
 a16:	3f 4f       	sbci	r19, 0xFF	; 255
 a18:	31 83       	std	Z+1, r19	; 0x01
 a1a:	20 83       	st	Z, r18
 a1c:	8c 93       	st	X, r24
 a1e:	26 81       	ldd	r18, Z+6	; 0x06
 a20:	37 81       	ldd	r19, Z+7	; 0x07
 a22:	2f 5f       	subi	r18, 0xFF	; 255
 a24:	3f 4f       	sbci	r19, 0xFF	; 255
 a26:	37 83       	std	Z+7, r19	; 0x07
 a28:	26 83       	std	Z+6, r18	; 0x06
 a2a:	14 c0       	rjmp	.+40     	; 0xa54 <fputc+0x6e>
 a2c:	8b 01       	movw	r16, r22
 a2e:	ec 01       	movw	r28, r24
 a30:	fb 01       	movw	r30, r22
 a32:	00 84       	ldd	r0, Z+8	; 0x08
 a34:	f1 85       	ldd	r31, Z+9	; 0x09
 a36:	e0 2d       	mov	r30, r0
 a38:	09 95       	icall
 a3a:	89 2b       	or	r24, r25
 a3c:	e1 f6       	brne	.-72     	; 0x9f6 <fputc+0x10>
 a3e:	d8 01       	movw	r26, r16
 a40:	16 96       	adiw	r26, 0x06	; 6
 a42:	8d 91       	ld	r24, X+
 a44:	9c 91       	ld	r25, X
 a46:	17 97       	sbiw	r26, 0x07	; 7
 a48:	01 96       	adiw	r24, 0x01	; 1
 a4a:	17 96       	adiw	r26, 0x07	; 7
 a4c:	9c 93       	st	X, r25
 a4e:	8e 93       	st	-X, r24
 a50:	16 97       	sbiw	r26, 0x06	; 6
 a52:	ce 01       	movw	r24, r28
 a54:	df 91       	pop	r29
 a56:	cf 91       	pop	r28
 a58:	1f 91       	pop	r17
 a5a:	0f 91       	pop	r16
 a5c:	08 95       	ret

00000a5e <__ultoa_invert>:
 a5e:	fa 01       	movw	r30, r20
 a60:	aa 27       	eor	r26, r26
 a62:	28 30       	cpi	r18, 0x08	; 8
 a64:	51 f1       	breq	.+84     	; 0xaba <__ultoa_invert+0x5c>
 a66:	20 31       	cpi	r18, 0x10	; 16
 a68:	81 f1       	breq	.+96     	; 0xaca <__ultoa_invert+0x6c>
 a6a:	e8 94       	clt
 a6c:	6f 93       	push	r22
 a6e:	6e 7f       	andi	r22, 0xFE	; 254
 a70:	6e 5f       	subi	r22, 0xFE	; 254
 a72:	7f 4f       	sbci	r23, 0xFF	; 255
 a74:	8f 4f       	sbci	r24, 0xFF	; 255
 a76:	9f 4f       	sbci	r25, 0xFF	; 255
 a78:	af 4f       	sbci	r26, 0xFF	; 255
 a7a:	b1 e0       	ldi	r27, 0x01	; 1
 a7c:	3e d0       	rcall	.+124    	; 0xafa <__ultoa_invert+0x9c>
 a7e:	b4 e0       	ldi	r27, 0x04	; 4
 a80:	3c d0       	rcall	.+120    	; 0xafa <__ultoa_invert+0x9c>
 a82:	67 0f       	add	r22, r23
 a84:	78 1f       	adc	r23, r24
 a86:	89 1f       	adc	r24, r25
 a88:	9a 1f       	adc	r25, r26
 a8a:	a1 1d       	adc	r26, r1
 a8c:	68 0f       	add	r22, r24
 a8e:	79 1f       	adc	r23, r25
 a90:	8a 1f       	adc	r24, r26
 a92:	91 1d       	adc	r25, r1
 a94:	a1 1d       	adc	r26, r1
 a96:	6a 0f       	add	r22, r26
 a98:	71 1d       	adc	r23, r1
 a9a:	81 1d       	adc	r24, r1
 a9c:	91 1d       	adc	r25, r1
 a9e:	a1 1d       	adc	r26, r1
 aa0:	20 d0       	rcall	.+64     	; 0xae2 <__ultoa_invert+0x84>
 aa2:	09 f4       	brne	.+2      	; 0xaa6 <__ultoa_invert+0x48>
 aa4:	68 94       	set
 aa6:	3f 91       	pop	r19
 aa8:	2a e0       	ldi	r18, 0x0A	; 10
 aaa:	26 9f       	mul	r18, r22
 aac:	11 24       	eor	r1, r1
 aae:	30 19       	sub	r19, r0
 ab0:	30 5d       	subi	r19, 0xD0	; 208
 ab2:	31 93       	st	Z+, r19
 ab4:	de f6       	brtc	.-74     	; 0xa6c <__ultoa_invert+0xe>
 ab6:	cf 01       	movw	r24, r30
 ab8:	08 95       	ret
 aba:	46 2f       	mov	r20, r22
 abc:	47 70       	andi	r20, 0x07	; 7
 abe:	40 5d       	subi	r20, 0xD0	; 208
 ac0:	41 93       	st	Z+, r20
 ac2:	b3 e0       	ldi	r27, 0x03	; 3
 ac4:	0f d0       	rcall	.+30     	; 0xae4 <__ultoa_invert+0x86>
 ac6:	c9 f7       	brne	.-14     	; 0xaba <__ultoa_invert+0x5c>
 ac8:	f6 cf       	rjmp	.-20     	; 0xab6 <__ultoa_invert+0x58>
 aca:	46 2f       	mov	r20, r22
 acc:	4f 70       	andi	r20, 0x0F	; 15
 ace:	40 5d       	subi	r20, 0xD0	; 208
 ad0:	4a 33       	cpi	r20, 0x3A	; 58
 ad2:	18 f0       	brcs	.+6      	; 0xada <__ultoa_invert+0x7c>
 ad4:	49 5d       	subi	r20, 0xD9	; 217
 ad6:	31 fd       	sbrc	r19, 1
 ad8:	40 52       	subi	r20, 0x20	; 32
 ada:	41 93       	st	Z+, r20
 adc:	02 d0       	rcall	.+4      	; 0xae2 <__ultoa_invert+0x84>
 ade:	a9 f7       	brne	.-22     	; 0xaca <__ultoa_invert+0x6c>
 ae0:	ea cf       	rjmp	.-44     	; 0xab6 <__ultoa_invert+0x58>
 ae2:	b4 e0       	ldi	r27, 0x04	; 4
 ae4:	a6 95       	lsr	r26
 ae6:	97 95       	ror	r25
 ae8:	87 95       	ror	r24
 aea:	77 95       	ror	r23
 aec:	67 95       	ror	r22
 aee:	ba 95       	dec	r27
 af0:	c9 f7       	brne	.-14     	; 0xae4 <__ultoa_invert+0x86>
 af2:	00 97       	sbiw	r24, 0x00	; 0
 af4:	61 05       	cpc	r22, r1
 af6:	71 05       	cpc	r23, r1
 af8:	08 95       	ret
 afa:	9b 01       	movw	r18, r22
 afc:	ac 01       	movw	r20, r24
 afe:	0a 2e       	mov	r0, r26
 b00:	06 94       	lsr	r0
 b02:	57 95       	ror	r21
 b04:	47 95       	ror	r20
 b06:	37 95       	ror	r19
 b08:	27 95       	ror	r18
 b0a:	ba 95       	dec	r27
 b0c:	c9 f7       	brne	.-14     	; 0xb00 <__ultoa_invert+0xa2>
 b0e:	62 0f       	add	r22, r18
 b10:	73 1f       	adc	r23, r19
 b12:	84 1f       	adc	r24, r20
 b14:	95 1f       	adc	r25, r21
 b16:	a0 1d       	adc	r26, r0
 b18:	08 95       	ret

00000b1a <eeprom_read_byte>:
 b1a:	f9 99       	sbic	0x1f, 1	; 31
 b1c:	fe cf       	rjmp	.-4      	; 0xb1a <eeprom_read_byte>
 b1e:	92 bd       	out	0x22, r25	; 34
 b20:	81 bd       	out	0x21, r24	; 33
 b22:	f8 9a       	sbi	0x1f, 0	; 31
 b24:	99 27       	eor	r25, r25
 b26:	80 b5       	in	r24, 0x20	; 32
 b28:	08 95       	ret

00000b2a <eeprom_update_byte>:
 b2a:	26 2f       	mov	r18, r22

00000b2c <eeprom_update_r18>:
 b2c:	f9 99       	sbic	0x1f, 1	; 31
 b2e:	fe cf       	rjmp	.-4      	; 0xb2c <eeprom_update_r18>
 b30:	92 bd       	out	0x22, r25	; 34
 b32:	81 bd       	out	0x21, r24	; 33
 b34:	f8 9a       	sbi	0x1f, 0	; 31
 b36:	01 97       	sbiw	r24, 0x01	; 1
 b38:	00 b4       	in	r0, 0x20	; 32
 b3a:	02 16       	cp	r0, r18
 b3c:	39 f0       	breq	.+14     	; 0xb4c <eeprom_update_r18+0x20>
 b3e:	1f ba       	out	0x1f, r1	; 31
 b40:	20 bd       	out	0x20, r18	; 32
 b42:	0f b6       	in	r0, 0x3f	; 63
 b44:	f8 94       	cli
 b46:	fa 9a       	sbi	0x1f, 2	; 31
 b48:	f9 9a       	sbi	0x1f, 1	; 31
 b4a:	0f be       	out	0x3f, r0	; 63
 b4c:	08 95       	ret

00000b4e <__divmodsi4>:
 b4e:	05 2e       	mov	r0, r21
 b50:	97 fb       	bst	r25, 7
 b52:	1e f4       	brtc	.+6      	; 0xb5a <__divmodsi4+0xc>
 b54:	00 94       	com	r0
 b56:	0e 94 be 05 	call	0xb7c	; 0xb7c <__negsi2>
 b5a:	57 fd       	sbrc	r21, 7
 b5c:	07 d0       	rcall	.+14     	; 0xb6c <__divmodsi4_neg2>
 b5e:	0e 94 10 06 	call	0xc20	; 0xc20 <__udivmodsi4>
 b62:	07 fc       	sbrc	r0, 7
 b64:	03 d0       	rcall	.+6      	; 0xb6c <__divmodsi4_neg2>
 b66:	4e f4       	brtc	.+18     	; 0xb7a <__divmodsi4_exit>
 b68:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__negsi2>

00000b6c <__divmodsi4_neg2>:
 b6c:	50 95       	com	r21
 b6e:	40 95       	com	r20
 b70:	30 95       	com	r19
 b72:	21 95       	neg	r18
 b74:	3f 4f       	sbci	r19, 0xFF	; 255
 b76:	4f 4f       	sbci	r20, 0xFF	; 255
 b78:	5f 4f       	sbci	r21, 0xFF	; 255

00000b7a <__divmodsi4_exit>:
 b7a:	08 95       	ret

00000b7c <__negsi2>:
 b7c:	90 95       	com	r25
 b7e:	80 95       	com	r24
 b80:	70 95       	com	r23
 b82:	61 95       	neg	r22
 b84:	7f 4f       	sbci	r23, 0xFF	; 255
 b86:	8f 4f       	sbci	r24, 0xFF	; 255
 b88:	9f 4f       	sbci	r25, 0xFF	; 255
 b8a:	08 95       	ret

00000b8c <__muluhisi3>:
 b8c:	0e 94 32 06 	call	0xc64	; 0xc64 <__umulhisi3>
 b90:	a5 9f       	mul	r26, r21
 b92:	90 0d       	add	r25, r0
 b94:	b4 9f       	mul	r27, r20
 b96:	90 0d       	add	r25, r0
 b98:	a4 9f       	mul	r26, r20
 b9a:	80 0d       	add	r24, r0
 b9c:	91 1d       	adc	r25, r1
 b9e:	11 24       	eor	r1, r1
 ba0:	08 95       	ret

00000ba2 <__mulshisi3>:
 ba2:	b7 ff       	sbrs	r27, 7
 ba4:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__muluhisi3>

00000ba8 <__mulohisi3>:
 ba8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__muluhisi3>
 bac:	82 1b       	sub	r24, r18
 bae:	93 0b       	sbc	r25, r19
 bb0:	08 95       	ret

00000bb2 <__prologue_saves__>:
 bb2:	2f 92       	push	r2
 bb4:	3f 92       	push	r3
 bb6:	4f 92       	push	r4
 bb8:	5f 92       	push	r5
 bba:	6f 92       	push	r6
 bbc:	7f 92       	push	r7
 bbe:	8f 92       	push	r8
 bc0:	9f 92       	push	r9
 bc2:	af 92       	push	r10
 bc4:	bf 92       	push	r11
 bc6:	cf 92       	push	r12
 bc8:	df 92       	push	r13
 bca:	ef 92       	push	r14
 bcc:	ff 92       	push	r15
 bce:	0f 93       	push	r16
 bd0:	1f 93       	push	r17
 bd2:	cf 93       	push	r28
 bd4:	df 93       	push	r29
 bd6:	cd b7       	in	r28, 0x3d	; 61
 bd8:	de b7       	in	r29, 0x3e	; 62
 bda:	ca 1b       	sub	r28, r26
 bdc:	db 0b       	sbc	r29, r27
 bde:	0f b6       	in	r0, 0x3f	; 63
 be0:	f8 94       	cli
 be2:	de bf       	out	0x3e, r29	; 62
 be4:	0f be       	out	0x3f, r0	; 63
 be6:	cd bf       	out	0x3d, r28	; 61
 be8:	09 94       	ijmp

00000bea <__epilogue_restores__>:
 bea:	2a 88       	ldd	r2, Y+18	; 0x12
 bec:	39 88       	ldd	r3, Y+17	; 0x11
 bee:	48 88       	ldd	r4, Y+16	; 0x10
 bf0:	5f 84       	ldd	r5, Y+15	; 0x0f
 bf2:	6e 84       	ldd	r6, Y+14	; 0x0e
 bf4:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf6:	8c 84       	ldd	r8, Y+12	; 0x0c
 bf8:	9b 84       	ldd	r9, Y+11	; 0x0b
 bfa:	aa 84       	ldd	r10, Y+10	; 0x0a
 bfc:	b9 84       	ldd	r11, Y+9	; 0x09
 bfe:	c8 84       	ldd	r12, Y+8	; 0x08
 c00:	df 80       	ldd	r13, Y+7	; 0x07
 c02:	ee 80       	ldd	r14, Y+6	; 0x06
 c04:	fd 80       	ldd	r15, Y+5	; 0x05
 c06:	0c 81       	ldd	r16, Y+4	; 0x04
 c08:	1b 81       	ldd	r17, Y+3	; 0x03
 c0a:	aa 81       	ldd	r26, Y+2	; 0x02
 c0c:	b9 81       	ldd	r27, Y+1	; 0x01
 c0e:	ce 0f       	add	r28, r30
 c10:	d1 1d       	adc	r29, r1
 c12:	0f b6       	in	r0, 0x3f	; 63
 c14:	f8 94       	cli
 c16:	de bf       	out	0x3e, r29	; 62
 c18:	0f be       	out	0x3f, r0	; 63
 c1a:	cd bf       	out	0x3d, r28	; 61
 c1c:	ed 01       	movw	r28, r26
 c1e:	08 95       	ret

00000c20 <__udivmodsi4>:
 c20:	a1 e2       	ldi	r26, 0x21	; 33
 c22:	1a 2e       	mov	r1, r26
 c24:	aa 1b       	sub	r26, r26
 c26:	bb 1b       	sub	r27, r27
 c28:	fd 01       	movw	r30, r26
 c2a:	0d c0       	rjmp	.+26     	; 0xc46 <__udivmodsi4_ep>

00000c2c <__udivmodsi4_loop>:
 c2c:	aa 1f       	adc	r26, r26
 c2e:	bb 1f       	adc	r27, r27
 c30:	ee 1f       	adc	r30, r30
 c32:	ff 1f       	adc	r31, r31
 c34:	a2 17       	cp	r26, r18
 c36:	b3 07       	cpc	r27, r19
 c38:	e4 07       	cpc	r30, r20
 c3a:	f5 07       	cpc	r31, r21
 c3c:	20 f0       	brcs	.+8      	; 0xc46 <__udivmodsi4_ep>
 c3e:	a2 1b       	sub	r26, r18
 c40:	b3 0b       	sbc	r27, r19
 c42:	e4 0b       	sbc	r30, r20
 c44:	f5 0b       	sbc	r31, r21

00000c46 <__udivmodsi4_ep>:
 c46:	66 1f       	adc	r22, r22
 c48:	77 1f       	adc	r23, r23
 c4a:	88 1f       	adc	r24, r24
 c4c:	99 1f       	adc	r25, r25
 c4e:	1a 94       	dec	r1
 c50:	69 f7       	brne	.-38     	; 0xc2c <__udivmodsi4_loop>
 c52:	60 95       	com	r22
 c54:	70 95       	com	r23
 c56:	80 95       	com	r24
 c58:	90 95       	com	r25
 c5a:	9b 01       	movw	r18, r22
 c5c:	ac 01       	movw	r20, r24
 c5e:	bd 01       	movw	r22, r26
 c60:	cf 01       	movw	r24, r30
 c62:	08 95       	ret

00000c64 <__umulhisi3>:
 c64:	a2 9f       	mul	r26, r18
 c66:	b0 01       	movw	r22, r0
 c68:	b3 9f       	mul	r27, r19
 c6a:	c0 01       	movw	r24, r0
 c6c:	a3 9f       	mul	r26, r19
 c6e:	70 0d       	add	r23, r0
 c70:	81 1d       	adc	r24, r1
 c72:	11 24       	eor	r1, r1
 c74:	91 1d       	adc	r25, r1
 c76:	b2 9f       	mul	r27, r18
 c78:	70 0d       	add	r23, r0
 c7a:	81 1d       	adc	r24, r1
 c7c:	11 24       	eor	r1, r1
 c7e:	91 1d       	adc	r25, r1
 c80:	08 95       	ret

00000c82 <_exit>:
 c82:	f8 94       	cli

00000c84 <__stop_program>:
 c84:	ff cf       	rjmp	.-2      	; 0xc84 <__stop_program>
