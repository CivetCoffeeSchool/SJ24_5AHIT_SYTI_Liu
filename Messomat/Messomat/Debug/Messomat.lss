
Messomat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000c5e  00000cf2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000045  00800112  00800112  00000d04  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d04  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000178c  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000be7  00000000  00000000  0000265c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cee  00000000  00000000  00003243  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d4  00000000  00000000  00003f34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000616  00000000  00000000  00004208  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f38  00000000  00000000  0000481e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00005756  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__vector_18>
  4c:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 35       	cpi	r26, 0x57	; 87
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 55 02 	call	0x4aa	; 0x4aa <main>
  9e:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <dht_getdata>:
#elif DHT_FLOAT == 0
int8_t dht_gethumidity(int8_t *humidity) {
	int8_t temperature = 0;
#endif
	return dht_getdata(&temperature, humidity);
}
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	00 d0       	rcall	.+0      	; 0xae <dht_getdata+0x8>
  ae:	00 d0       	rcall	.+0      	; 0xb0 <dht_getdata+0xa>
  b0:	1f 92       	push	r1
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	fc 01       	movw	r30, r24
  b8:	9e 01       	movw	r18, r28
  ba:	2f 5f       	subi	r18, 0xFF	; 255
  bc:	3f 4f       	sbci	r19, 0xFF	; 255
  be:	85 e0       	ldi	r24, 0x05	; 5
  c0:	d9 01       	movw	r26, r18
  c2:	1d 92       	st	X+, r1
  c4:	8a 95       	dec	r24
  c6:	e9 f7       	brne	.-6      	; 0xc2 <dht_getdata+0x1c>
  c8:	87 b1       	in	r24, 0x07	; 7
  ca:	81 60       	ori	r24, 0x01	; 1
  cc:	87 b9       	out	0x07, r24	; 7
  ce:	98 b1       	in	r25, 0x08	; 8
  d0:	91 60       	ori	r25, 0x01	; 1
  d2:	98 b9       	out	0x08, r25	; 8
  d4:	bf ef       	ldi	r27, 0xFF	; 255
  d6:	21 ee       	ldi	r18, 0xE1	; 225
  d8:	84 e0       	ldi	r24, 0x04	; 4
  da:	b1 50       	subi	r27, 0x01	; 1
  dc:	20 40       	sbci	r18, 0x00	; 0
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <dht_getdata+0x34>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <dht_getdata+0x3e>
  e4:	00 00       	nop
  e6:	98 b1       	in	r25, 0x08	; 8
  e8:	9e 7f       	andi	r25, 0xFE	; 254
  ea:	98 b9       	out	0x08, r25	; 8
  ec:	9f ef       	ldi	r25, 0xFF	; 255
  ee:	a0 ee       	ldi	r26, 0xE0	; 224
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	91 50       	subi	r25, 0x01	; 1
  f4:	a0 40       	sbci	r26, 0x00	; 0
  f6:	b0 40       	sbci	r27, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <dht_getdata+0x4c>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <dht_getdata+0x56>
  fc:	00 00       	nop
  fe:	98 b1       	in	r25, 0x08	; 8
 100:	91 60       	ori	r25, 0x01	; 1
 102:	98 b9       	out	0x08, r25	; 8
 104:	97 b1       	in	r25, 0x07	; 7
 106:	9e 7f       	andi	r25, 0xFE	; 254
 108:	97 b9       	out	0x07, r25	; 7
 10a:	25 ed       	ldi	r18, 0xD5	; 213
 10c:	2a 95       	dec	r18
 10e:	f1 f7       	brne	.-4      	; 0x10c <dht_getdata+0x66>
 110:	00 00       	nop
 112:	30 99       	sbic	0x06, 0	; 6
 114:	65 c0       	rjmp	.+202    	; 0x1e0 <dht_getdata+0x13a>
 116:	8f e3       	ldi	r24, 0x3F	; 63
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <dht_getdata+0x74>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <dht_getdata+0x7a>
 120:	00 00       	nop
 122:	30 9b       	sbis	0x06, 0	; 6
 124:	5f c0       	rjmp	.+190    	; 0x1e4 <dht_getdata+0x13e>
 126:	af e3       	ldi	r26, 0x3F	; 63
 128:	b1 e0       	ldi	r27, 0x01	; 1
 12a:	11 97       	sbiw	r26, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <dht_getdata+0x84>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <dht_getdata+0x8a>
 130:	00 00       	nop
 132:	10 e0       	ldi	r17, 0x00	; 0
 134:	34 c0       	rjmp	.+104    	; 0x19e <dht_getdata+0xf8>
 136:	2f 5f       	subi	r18, 0xFF	; 255
 138:	3f 4f       	sbci	r19, 0xFF	; 255
 13a:	29 3c       	cpi	r18, 0xC9	; 201
 13c:	31 05       	cpc	r19, r1
 13e:	18 f0       	brcs	.+6      	; 0x146 <dht_getdata+0xa0>
 140:	53 c0       	rjmp	.+166    	; 0x1e8 <dht_getdata+0x142>
 142:	20 e0       	ldi	r18, 0x00	; 0
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	30 9b       	sbis	0x06, 0	; 6
 148:	f6 cf       	rjmp	.-20     	; 0x136 <dht_getdata+0x90>
 14a:	b0 ea       	ldi	r27, 0xA0	; 160
 14c:	ba 95       	dec	r27
 14e:	f1 f7       	brne	.-4      	; 0x14c <dht_getdata+0xa6>
 150:	30 9b       	sbis	0x06, 0	; 6
 152:	0c c0       	rjmp	.+24     	; 0x16c <dht_getdata+0xc6>
 154:	47 e0       	ldi	r20, 0x07	; 7
 156:	50 e0       	ldi	r21, 0x00	; 0
 158:	49 1b       	sub	r20, r25
 15a:	51 09       	sbc	r21, r1
 15c:	21 e0       	ldi	r18, 0x01	; 1
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	02 c0       	rjmp	.+4      	; 0x166 <dht_getdata+0xc0>
 162:	22 0f       	add	r18, r18
 164:	33 1f       	adc	r19, r19
 166:	4a 95       	dec	r20
 168:	e2 f7       	brpl	.-8      	; 0x162 <dht_getdata+0xbc>
 16a:	82 2b       	or	r24, r18
 16c:	20 e0       	ldi	r18, 0x00	; 0
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	05 c0       	rjmp	.+10     	; 0x17c <dht_getdata+0xd6>
 172:	2f 5f       	subi	r18, 0xFF	; 255
 174:	3f 4f       	sbci	r19, 0xFF	; 255
 176:	29 3c       	cpi	r18, 0xC9	; 201
 178:	31 05       	cpc	r19, r1
 17a:	c0 f5       	brcc	.+112    	; 0x1ec <dht_getdata+0x146>
 17c:	30 99       	sbic	0x06, 0	; 6
 17e:	f9 cf       	rjmp	.-14     	; 0x172 <dht_getdata+0xcc>
 180:	9f 5f       	subi	r25, 0xFF	; 255
 182:	02 c0       	rjmp	.+4      	; 0x188 <dht_getdata+0xe2>
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	98 30       	cpi	r25, 0x08	; 8
 18a:	d8 f2       	brcs	.-74     	; 0x142 <dht_getdata+0x9c>
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	2c 0f       	add	r18, r28
 192:	3d 1f       	adc	r19, r29
 194:	21 0f       	add	r18, r17
 196:	31 1d       	adc	r19, r1
 198:	d9 01       	movw	r26, r18
 19a:	8c 93       	st	X, r24
 19c:	1f 5f       	subi	r17, 0xFF	; 255
 19e:	15 30       	cpi	r17, 0x05	; 5
 1a0:	88 f3       	brcs	.-30     	; 0x184 <dht_getdata+0xde>
 1a2:	87 b1       	in	r24, 0x07	; 7
 1a4:	81 60       	ori	r24, 0x01	; 1
 1a6:	87 b9       	out	0x07, r24	; 7
 1a8:	88 b1       	in	r24, 0x08	; 8
 1aa:	81 60       	ori	r24, 0x01	; 1
 1ac:	88 b9       	out	0x08, r24	; 8
 1ae:	bf ef       	ldi	r27, 0xFF	; 255
 1b0:	21 ee       	ldi	r18, 0xE1	; 225
 1b2:	84 e0       	ldi	r24, 0x04	; 4
 1b4:	b1 50       	subi	r27, 0x01	; 1
 1b6:	20 40       	sbci	r18, 0x00	; 0
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <dht_getdata+0x10e>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <dht_getdata+0x118>
 1be:	00 00       	nop
 1c0:	89 81       	ldd	r24, Y+1	; 0x01
 1c2:	9a 81       	ldd	r25, Y+2	; 0x02
 1c4:	3b 81       	ldd	r19, Y+3	; 0x03
 1c6:	2c 81       	ldd	r18, Y+4	; 0x04
 1c8:	89 0f       	add	r24, r25
 1ca:	83 0f       	add	r24, r19
 1cc:	82 0f       	add	r24, r18
 1ce:	9d 81       	ldd	r25, Y+5	; 0x05
 1d0:	89 13       	cpse	r24, r25
 1d2:	0e c0       	rjmp	.+28     	; 0x1f0 <dht_getdata+0x14a>
 1d4:	30 83       	st	Z, r19
 1d6:	89 81       	ldd	r24, Y+1	; 0x01
 1d8:	db 01       	movw	r26, r22
 1da:	8c 93       	st	X, r24
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	09 c0       	rjmp	.+18     	; 0x1f2 <dht_getdata+0x14c>
 1e0:	8f ef       	ldi	r24, 0xFF	; 255
 1e2:	07 c0       	rjmp	.+14     	; 0x1f2 <dht_getdata+0x14c>
 1e4:	8e ef       	ldi	r24, 0xFE	; 254
 1e6:	05 c0       	rjmp	.+10     	; 0x1f2 <dht_getdata+0x14c>
 1e8:	8d ef       	ldi	r24, 0xFD	; 253
 1ea:	03 c0       	rjmp	.+6      	; 0x1f2 <dht_getdata+0x14c>
 1ec:	8f ef       	ldi	r24, 0xFF	; 255
 1ee:	01 c0       	rjmp	.+2      	; 0x1f2 <dht_getdata+0x14c>
 1f0:	8b ef       	ldi	r24, 0xFB	; 251
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	df 91       	pop	r29
 1fe:	cf 91       	pop	r28
 200:	1f 91       	pop	r17
 202:	08 95       	ret

00000204 <dht_gettemperaturehumidity>:
#if DHT_FLOAT == 1
int8_t dht_gettemperaturehumidity(float *temperature, float *humidity) {
#elif DHT_FLOAT == 0
	int8_t dht_gettemperaturehumidity(int8_t *temperature, int8_t *humidity) {
#endif
	return dht_getdata(temperature, humidity);
 204:	0e 94 53 00 	call	0xa6	; 0xa6 <dht_getdata>
}
 208:	08 95       	ret

0000020a <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 20a:	88 b1       	in	r24, 0x08	; 8
 20c:	88 60       	ori	r24, 0x08	; 8
 20e:	88 b9       	out	0x08, r24	; 8
 210:	85 e0       	ldi	r24, 0x05	; 5
 212:	8a 95       	dec	r24
 214:	f1 f7       	brne	.-4      	; 0x212 <toggle_e+0x8>
 216:	00 00       	nop
 218:	88 b1       	in	r24, 0x08	; 8
 21a:	87 7f       	andi	r24, 0xF7	; 247
 21c:	88 b9       	out	0x08, r24	; 8
 21e:	08 95       	ret

00000220 <lcd_write>:
 220:	cf 93       	push	r28
 222:	c8 2f       	mov	r28, r24
 224:	66 23       	and	r22, r22
 226:	21 f0       	breq	.+8      	; 0x230 <lcd_write+0x10>
 228:	88 b1       	in	r24, 0x08	; 8
 22a:	80 62       	ori	r24, 0x20	; 32
 22c:	88 b9       	out	0x08, r24	; 8
 22e:	03 c0       	rjmp	.+6      	; 0x236 <lcd_write+0x16>
 230:	88 b1       	in	r24, 0x08	; 8
 232:	8f 7d       	andi	r24, 0xDF	; 223
 234:	88 b9       	out	0x08, r24	; 8
 236:	88 b1       	in	r24, 0x08	; 8
 238:	8f 7e       	andi	r24, 0xEF	; 239
 23a:	88 b9       	out	0x08, r24	; 8
 23c:	8a b1       	in	r24, 0x0a	; 10
 23e:	80 61       	ori	r24, 0x10	; 16
 240:	8a b9       	out	0x0a, r24	; 10
 242:	8a b1       	in	r24, 0x0a	; 10
 244:	80 62       	ori	r24, 0x20	; 32
 246:	8a b9       	out	0x0a, r24	; 10
 248:	8a b1       	in	r24, 0x0a	; 10
 24a:	80 64       	ori	r24, 0x40	; 64
 24c:	8a b9       	out	0x0a, r24	; 10
 24e:	8a b1       	in	r24, 0x0a	; 10
 250:	80 68       	ori	r24, 0x80	; 128
 252:	8a b9       	out	0x0a, r24	; 10
 254:	8b b1       	in	r24, 0x0b	; 11
 256:	8f 77       	andi	r24, 0x7F	; 127
 258:	8b b9       	out	0x0b, r24	; 11
 25a:	8b b1       	in	r24, 0x0b	; 11
 25c:	8f 7b       	andi	r24, 0xBF	; 191
 25e:	8b b9       	out	0x0b, r24	; 11
 260:	8b b1       	in	r24, 0x0b	; 11
 262:	8f 7d       	andi	r24, 0xDF	; 223
 264:	8b b9       	out	0x0b, r24	; 11
 266:	8b b1       	in	r24, 0x0b	; 11
 268:	8f 7e       	andi	r24, 0xEF	; 239
 26a:	8b b9       	out	0x0b, r24	; 11
 26c:	cc 23       	and	r28, r28
 26e:	1c f4       	brge	.+6      	; 0x276 <lcd_write+0x56>
 270:	8b b1       	in	r24, 0x0b	; 11
 272:	80 68       	ori	r24, 0x80	; 128
 274:	8b b9       	out	0x0b, r24	; 11
 276:	c6 ff       	sbrs	r28, 6
 278:	03 c0       	rjmp	.+6      	; 0x280 <lcd_write+0x60>
 27a:	8b b1       	in	r24, 0x0b	; 11
 27c:	80 64       	ori	r24, 0x40	; 64
 27e:	8b b9       	out	0x0b, r24	; 11
 280:	c5 ff       	sbrs	r28, 5
 282:	03 c0       	rjmp	.+6      	; 0x28a <lcd_write+0x6a>
 284:	8b b1       	in	r24, 0x0b	; 11
 286:	80 62       	ori	r24, 0x20	; 32
 288:	8b b9       	out	0x0b, r24	; 11
 28a:	c4 ff       	sbrs	r28, 4
 28c:	03 c0       	rjmp	.+6      	; 0x294 <lcd_write+0x74>
 28e:	8b b1       	in	r24, 0x0b	; 11
 290:	80 61       	ori	r24, 0x10	; 16
 292:	8b b9       	out	0x0b, r24	; 11
 294:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
 298:	8b b1       	in	r24, 0x0b	; 11
 29a:	8f 77       	andi	r24, 0x7F	; 127
 29c:	8b b9       	out	0x0b, r24	; 11
 29e:	8b b1       	in	r24, 0x0b	; 11
 2a0:	8f 7b       	andi	r24, 0xBF	; 191
 2a2:	8b b9       	out	0x0b, r24	; 11
 2a4:	8b b1       	in	r24, 0x0b	; 11
 2a6:	8f 7d       	andi	r24, 0xDF	; 223
 2a8:	8b b9       	out	0x0b, r24	; 11
 2aa:	8b b1       	in	r24, 0x0b	; 11
 2ac:	8f 7e       	andi	r24, 0xEF	; 239
 2ae:	8b b9       	out	0x0b, r24	; 11
 2b0:	c3 ff       	sbrs	r28, 3
 2b2:	03 c0       	rjmp	.+6      	; 0x2ba <lcd_write+0x9a>
 2b4:	8b b1       	in	r24, 0x0b	; 11
 2b6:	80 68       	ori	r24, 0x80	; 128
 2b8:	8b b9       	out	0x0b, r24	; 11
 2ba:	c2 ff       	sbrs	r28, 2
 2bc:	03 c0       	rjmp	.+6      	; 0x2c4 <lcd_write+0xa4>
 2be:	8b b1       	in	r24, 0x0b	; 11
 2c0:	80 64       	ori	r24, 0x40	; 64
 2c2:	8b b9       	out	0x0b, r24	; 11
 2c4:	c1 ff       	sbrs	r28, 1
 2c6:	03 c0       	rjmp	.+6      	; 0x2ce <lcd_write+0xae>
 2c8:	8b b1       	in	r24, 0x0b	; 11
 2ca:	80 62       	ori	r24, 0x20	; 32
 2cc:	8b b9       	out	0x0b, r24	; 11
 2ce:	c0 ff       	sbrs	r28, 0
 2d0:	03 c0       	rjmp	.+6      	; 0x2d8 <lcd_write+0xb8>
 2d2:	8b b1       	in	r24, 0x0b	; 11
 2d4:	80 61       	ori	r24, 0x10	; 16
 2d6:	8b b9       	out	0x0b, r24	; 11
 2d8:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
 2dc:	8b b1       	in	r24, 0x0b	; 11
 2de:	80 61       	ori	r24, 0x10	; 16
 2e0:	8b b9       	out	0x0b, r24	; 11
 2e2:	8b b1       	in	r24, 0x0b	; 11
 2e4:	80 62       	ori	r24, 0x20	; 32
 2e6:	8b b9       	out	0x0b, r24	; 11
 2e8:	8b b1       	in	r24, 0x0b	; 11
 2ea:	80 64       	ori	r24, 0x40	; 64
 2ec:	8b b9       	out	0x0b, r24	; 11
 2ee:	8b b1       	in	r24, 0x0b	; 11
 2f0:	80 68       	ori	r24, 0x80	; 128
 2f2:	8b b9       	out	0x0b, r24	; 11
 2f4:	cf 91       	pop	r28
 2f6:	08 95       	ret

000002f8 <lcd_read>:
 2f8:	88 23       	and	r24, r24
 2fa:	21 f0       	breq	.+8      	; 0x304 <lcd_read+0xc>
 2fc:	88 b1       	in	r24, 0x08	; 8
 2fe:	80 62       	ori	r24, 0x20	; 32
 300:	88 b9       	out	0x08, r24	; 8
 302:	03 c0       	rjmp	.+6      	; 0x30a <lcd_read+0x12>
 304:	88 b1       	in	r24, 0x08	; 8
 306:	8f 7d       	andi	r24, 0xDF	; 223
 308:	88 b9       	out	0x08, r24	; 8
 30a:	88 b1       	in	r24, 0x08	; 8
 30c:	80 61       	ori	r24, 0x10	; 16
 30e:	88 b9       	out	0x08, r24	; 8
 310:	8a b1       	in	r24, 0x0a	; 10
 312:	8f 7e       	andi	r24, 0xEF	; 239
 314:	8a b9       	out	0x0a, r24	; 10
 316:	8a b1       	in	r24, 0x0a	; 10
 318:	8f 7d       	andi	r24, 0xDF	; 223
 31a:	8a b9       	out	0x0a, r24	; 10
 31c:	8a b1       	in	r24, 0x0a	; 10
 31e:	8f 7b       	andi	r24, 0xBF	; 191
 320:	8a b9       	out	0x0a, r24	; 10
 322:	8a b1       	in	r24, 0x0a	; 10
 324:	8f 77       	andi	r24, 0x7F	; 127
 326:	8a b9       	out	0x0a, r24	; 10
 328:	88 b1       	in	r24, 0x08	; 8
 32a:	88 60       	ori	r24, 0x08	; 8
 32c:	88 b9       	out	0x08, r24	; 8
 32e:	85 e0       	ldi	r24, 0x05	; 5
 330:	8a 95       	dec	r24
 332:	f1 f7       	brne	.-4      	; 0x330 <lcd_read+0x38>
 334:	00 00       	nop
 336:	4c 99       	sbic	0x09, 4	; 9
 338:	02 c0       	rjmp	.+4      	; 0x33e <lcd_read+0x46>
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	01 c0       	rjmp	.+2      	; 0x340 <lcd_read+0x48>
 33e:	80 e1       	ldi	r24, 0x10	; 16
 340:	4d 99       	sbic	0x09, 5	; 9
 342:	80 62       	ori	r24, 0x20	; 32
 344:	4e 99       	sbic	0x09, 6	; 9
 346:	80 64       	ori	r24, 0x40	; 64
 348:	4f 99       	sbic	0x09, 7	; 9
 34a:	80 68       	ori	r24, 0x80	; 128
 34c:	98 b1       	in	r25, 0x08	; 8
 34e:	97 7f       	andi	r25, 0xF7	; 247
 350:	98 b9       	out	0x08, r25	; 8
 352:	95 e0       	ldi	r25, 0x05	; 5
 354:	9a 95       	dec	r25
 356:	f1 f7       	brne	.-4      	; 0x354 <lcd_read+0x5c>
 358:	00 00       	nop
 35a:	98 b1       	in	r25, 0x08	; 8
 35c:	98 60       	ori	r25, 0x08	; 8
 35e:	98 b9       	out	0x08, r25	; 8
 360:	95 e0       	ldi	r25, 0x05	; 5
 362:	9a 95       	dec	r25
 364:	f1 f7       	brne	.-4      	; 0x362 <lcd_read+0x6a>
 366:	00 00       	nop
 368:	4c 99       	sbic	0x09, 4	; 9
 36a:	81 60       	ori	r24, 0x01	; 1
 36c:	4d 99       	sbic	0x09, 5	; 9
 36e:	82 60       	ori	r24, 0x02	; 2
 370:	4e 99       	sbic	0x09, 6	; 9
 372:	84 60       	ori	r24, 0x04	; 4
 374:	4f 99       	sbic	0x09, 7	; 9
 376:	88 60       	ori	r24, 0x08	; 8
 378:	98 b1       	in	r25, 0x08	; 8
 37a:	97 7f       	andi	r25, 0xF7	; 247
 37c:	98 b9       	out	0x08, r25	; 8
 37e:	08 95       	ret

00000380 <lcd_waitbusy>:
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_read>
 386:	88 23       	and	r24, r24
 388:	dc f3       	brlt	.-10     	; 0x380 <lcd_waitbusy>
 38a:	85 e1       	ldi	r24, 0x15	; 21
 38c:	8a 95       	dec	r24
 38e:	f1 f7       	brne	.-4      	; 0x38c <lcd_waitbusy+0xc>
 390:	00 00       	nop
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_read>
 398:	08 95       	ret

0000039a <lcd_command>:
 39a:	cf 93       	push	r28
 39c:	c8 2f       	mov	r28, r24
 39e:	0e 94 c0 01 	call	0x380	; 0x380 <lcd_waitbusy>
 3a2:	60 e0       	ldi	r22, 0x00	; 0
 3a4:	8c 2f       	mov	r24, r28
 3a6:	0e 94 10 01 	call	0x220	; 0x220 <lcd_write>
 3aa:	cf 91       	pop	r28
 3ac:	08 95       	ret

000003ae <lcd_clrscr>:
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	0e 94 cd 01 	call	0x39a	; 0x39a <lcd_command>
 3b4:	08 95       	ret

000003b6 <lcd_putc>:
 3b6:	cf 93       	push	r28
 3b8:	c8 2f       	mov	r28, r24
 3ba:	0e 94 c0 01 	call	0x380	; 0x380 <lcd_waitbusy>
 3be:	ca 30       	cpi	r28, 0x0A	; 10
 3c0:	49 f4       	brne	.+18     	; 0x3d4 <lcd_putc+0x1e>
 3c2:	80 34       	cpi	r24, 0x40	; 64
 3c4:	10 f4       	brcc	.+4      	; 0x3ca <lcd_putc+0x14>
 3c6:	80 e4       	ldi	r24, 0x40	; 64
 3c8:	01 c0       	rjmp	.+2      	; 0x3cc <lcd_putc+0x16>
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	80 58       	subi	r24, 0x80	; 128
 3ce:	0e 94 cd 01 	call	0x39a	; 0x39a <lcd_command>
 3d2:	04 c0       	rjmp	.+8      	; 0x3dc <lcd_putc+0x26>
 3d4:	61 e0       	ldi	r22, 0x01	; 1
 3d6:	8c 2f       	mov	r24, r28
 3d8:	0e 94 10 01 	call	0x220	; 0x220 <lcd_write>
 3dc:	cf 91       	pop	r28
 3de:	08 95       	ret

000003e0 <lcd_puts>:
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	fc 01       	movw	r30, r24
 3e6:	03 c0       	rjmp	.+6      	; 0x3ee <lcd_puts+0xe>
 3e8:	0e 94 db 01 	call	0x3b6	; 0x3b6 <lcd_putc>
 3ec:	fe 01       	movw	r30, r28
 3ee:	ef 01       	movw	r28, r30
 3f0:	21 96       	adiw	r28, 0x01	; 1
 3f2:	80 81       	ld	r24, Z
 3f4:	81 11       	cpse	r24, r1
 3f6:	f8 cf       	rjmp	.-16     	; 0x3e8 <lcd_puts+0x8>
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	08 95       	ret

000003fe <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 3fe:	cf 93       	push	r28
 400:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 402:	87 b1       	in	r24, 0x07	; 7
 404:	80 62       	ori	r24, 0x20	; 32
 406:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 408:	87 b1       	in	r24, 0x07	; 7
 40a:	80 61       	ori	r24, 0x10	; 16
 40c:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 40e:	87 b1       	in	r24, 0x07	; 7
 410:	88 60       	ori	r24, 0x08	; 8
 412:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 414:	8a b1       	in	r24, 0x0a	; 10
 416:	80 61       	ori	r24, 0x10	; 16
 418:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 41a:	8a b1       	in	r24, 0x0a	; 10
 41c:	80 62       	ori	r24, 0x20	; 32
 41e:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 420:	8a b1       	in	r24, 0x0a	; 10
 422:	80 64       	ori	r24, 0x40	; 64
 424:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 426:	8a b1       	in	r24, 0x0a	; 10
 428:	80 68       	ori	r24, 0x80	; 128
 42a:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 42c:	8f ef       	ldi	r24, 0xFF	; 255
 42e:	99 ef       	ldi	r25, 0xF9	; 249
 430:	01 97       	sbiw	r24, 0x01	; 1
 432:	f1 f7       	brne	.-4      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 434:	00 c0       	rjmp	.+0      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 436:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 438:	8b b1       	in	r24, 0x0b	; 11
 43a:	80 62       	ori	r24, 0x20	; 32
 43c:	8b b9       	out	0x0b, r24	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 43e:	8b b1       	in	r24, 0x0b	; 11
 440:	80 61       	ori	r24, 0x10	; 16
 442:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 444:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
 448:	8f e1       	ldi	r24, 0x1F	; 31
 44a:	9e e4       	ldi	r25, 0x4E	; 78
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 452:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 454:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
 458:	8f ef       	ldi	r24, 0xFF	; 255
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	01 97       	sbiw	r24, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 460:	00 c0       	rjmp	.+0      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 462:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 464:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
 468:	8f ef       	ldi	r24, 0xFF	; 255
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	01 97       	sbiw	r24, 0x01	; 1
 46e:	f1 f7       	brne	.-4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 474:	8b b1       	in	r24, 0x0b	; 11
 476:	8f 7e       	andi	r24, 0xEF	; 239
 478:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 47a:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
 47e:	8f ef       	ldi	r24, 0xFF	; 255
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	01 97       	sbiw	r24, 0x01	; 1
 484:	f1 f7       	brne	.-4      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 486:	00 c0       	rjmp	.+0      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 488:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 48a:	88 e2       	ldi	r24, 0x28	; 40
 48c:	0e 94 cd 01 	call	0x39a	; 0x39a <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 490:	88 e0       	ldi	r24, 0x08	; 8
 492:	0e 94 cd 01 	call	0x39a	; 0x39a <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 496:	0e 94 d7 01 	call	0x3ae	; 0x3ae <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 49a:	86 e0       	ldi	r24, 0x06	; 6
 49c:	0e 94 cd 01 	call	0x39a	; 0x39a <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 4a0:	8c 2f       	mov	r24, r28
 4a2:	0e 94 cd 01 	call	0x39a	; 0x39a <lcd_command>

}/* lcd_init */
 4a6:	cf 91       	pop	r28
 4a8:	08 95       	ret

000004aa <main>:
#include "lcd.h"
#include "uart.h"


int main(void)
{
 4aa:	cf 93       	push	r28
 4ac:	df 93       	push	r29
 4ae:	cd b7       	in	r28, 0x3d	; 61
 4b0:	de b7       	in	r29, 0x3e	; 62
 4b2:	2c 97       	sbiw	r28, 0x0c	; 12
 4b4:	0f b6       	in	r0, 0x3f	; 63
 4b6:	f8 94       	cli
 4b8:	de bf       	out	0x3e, r29	; 62
 4ba:	0f be       	out	0x3f, r0	; 63
 4bc:	cd bf       	out	0x3d, r28	; 61
	lcd_init(LCD_DISP_ON);
 4be:	8c e0       	ldi	r24, 0x0C	; 12
 4c0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_init>
	lcd_clrscr();
 4c4:	0e 94 d7 01 	call	0x3ae	; 0x3ae <lcd_clrscr>
	uint8_t currentTemp;
	uint8_t currentHumidity;
	int8_t errorStatus;
	char buffer[10];
	uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));
 4c8:	87 e6       	ldi	r24, 0x67	; 103
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 94 06 03 	call	0x60c	; 0x60c <uart_init>
	sei();
 4d0:	78 94       	sei
	
	
    /* Replace with your application code */
    while (1) 
    {
		if(dht_gettemperaturehumidity(&currentTemp,&currentHumidity)== DHT_ERROR_NOERR)
 4d2:	be 01       	movw	r22, r28
 4d4:	6e 5f       	subi	r22, 0xFE	; 254
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	ce 01       	movw	r24, r28
 4da:	01 96       	adiw	r24, 0x01	; 1
 4dc:	0e 94 02 01 	call	0x204	; 0x204 <dht_gettemperaturehumidity>
 4e0:	81 11       	cpse	r24, r1
 4e2:	f7 cf       	rjmp	.-18     	; 0x4d2 <main+0x28>
		{
			sprintf(buffer,"T:%dC H:%d%%",currentTemp,currentHumidity);
 4e4:	8a 81       	ldd	r24, Y+2	; 0x02
 4e6:	1f 92       	push	r1
 4e8:	8f 93       	push	r24
 4ea:	89 81       	ldd	r24, Y+1	; 0x01
 4ec:	1f 92       	push	r1
 4ee:	8f 93       	push	r24
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	91 e0       	ldi	r25, 0x01	; 1
 4f4:	9f 93       	push	r25
 4f6:	8f 93       	push	r24
 4f8:	8e 01       	movw	r16, r28
 4fa:	0d 5f       	subi	r16, 0xFD	; 253
 4fc:	1f 4f       	sbci	r17, 0xFF	; 255
 4fe:	1f 93       	push	r17
 500:	0f 93       	push	r16
 502:	0e 94 43 03 	call	0x686	; 0x686 <sprintf>
			lcd_clrscr();
 506:	0e 94 d7 01 	call	0x3ae	; 0x3ae <lcd_clrscr>
			lcd_puts(buffer);
 50a:	c8 01       	movw	r24, r16
 50c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <lcd_puts>
			sprintf(buffer, "%d%d",currentTemp,currentHumidity);
 510:	8a 81       	ldd	r24, Y+2	; 0x02
 512:	1f 92       	push	r1
 514:	8f 93       	push	r24
 516:	89 81       	ldd	r24, Y+1	; 0x01
 518:	1f 92       	push	r1
 51a:	8f 93       	push	r24
 51c:	8d e0       	ldi	r24, 0x0D	; 13
 51e:	91 e0       	ldi	r25, 0x01	; 1
 520:	9f 93       	push	r25
 522:	8f 93       	push	r24
 524:	1f 93       	push	r17
 526:	0f 93       	push	r16
 528:	0e 94 43 03 	call	0x686	; 0x686 <sprintf>
			uart_putc(0x02);
 52c:	82 e0       	ldi	r24, 0x02	; 2
 52e:	0e 94 21 03 	call	0x642	; 0x642 <uart_putc>
			uart_puts(buffer);
 532:	c8 01       	movw	r24, r16
 534:	0e 94 36 03 	call	0x66c	; 0x66c <uart_puts>
			uart_putc(0x03);
 538:	83 e0       	ldi	r24, 0x03	; 3
 53a:	0e 94 21 03 	call	0x642	; 0x642 <uart_putc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 53e:	2f ef       	ldi	r18, 0xFF	; 255
 540:	83 ec       	ldi	r24, 0xC3	; 195
 542:	99 e0       	ldi	r25, 0x09	; 9
 544:	21 50       	subi	r18, 0x01	; 1
 546:	80 40       	sbci	r24, 0x00	; 0
 548:	90 40       	sbci	r25, 0x00	; 0
 54a:	e1 f7       	brne	.-8      	; 0x544 <main+0x9a>
 54c:	00 c0       	rjmp	.+0      	; 0x54e <main+0xa4>
 54e:	00 00       	nop
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	f8 94       	cli
 554:	de bf       	out	0x3e, r29	; 62
 556:	0f be       	out	0x3f, r0	; 63
 558:	cd bf       	out	0x3d, r28	; 61
 55a:	bb cf       	rjmp	.-138    	; 0x4d2 <main+0x28>

0000055c <__vector_18>:
    UART_RxTail = tmptail; 
    
    UART_LastRxError = 0;
    return (lastRxError << 8) + data;

}/* uart_getc */
 55c:	1f 92       	push	r1
 55e:	0f 92       	push	r0
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	0f 92       	push	r0
 564:	11 24       	eor	r1, r1
 566:	2f 93       	push	r18
 568:	8f 93       	push	r24
 56a:	9f 93       	push	r25
 56c:	ef 93       	push	r30
 56e:	ff 93       	push	r31
 570:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 574:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 578:	8c 71       	andi	r24, 0x1C	; 28
 57a:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <UART_RxHead>
 57e:	ef 5f       	subi	r30, 0xFF	; 255
 580:	ef 71       	andi	r30, 0x1F	; 31
 582:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <UART_RxTail>
 586:	e9 17       	cp	r30, r25
 588:	39 f0       	breq	.+14     	; 0x598 <__vector_18+0x3c>
 58a:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <UART_RxHead>
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	e9 5e       	subi	r30, 0xE9	; 233
 592:	fe 4f       	sbci	r31, 0xFE	; 254
 594:	20 83       	st	Z, r18
 596:	01 c0       	rjmp	.+2      	; 0x59a <__vector_18+0x3e>
 598:	82 e0       	ldi	r24, 0x02	; 2
 59a:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <__data_end>
 59e:	89 2b       	or	r24, r25
 5a0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 5a4:	ff 91       	pop	r31
 5a6:	ef 91       	pop	r30
 5a8:	9f 91       	pop	r25
 5aa:	8f 91       	pop	r24
 5ac:	2f 91       	pop	r18
 5ae:	0f 90       	pop	r0
 5b0:	0f be       	out	0x3f, r0	; 63
 5b2:	0f 90       	pop	r0
 5b4:	1f 90       	pop	r1
 5b6:	18 95       	reti

000005b8 <__vector_19>:
 5b8:	1f 92       	push	r1
 5ba:	0f 92       	push	r0
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	0f 92       	push	r0
 5c0:	11 24       	eor	r1, r1
 5c2:	8f 93       	push	r24
 5c4:	9f 93       	push	r25
 5c6:	ef 93       	push	r30
 5c8:	ff 93       	push	r31
 5ca:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <UART_TxHead>
 5ce:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <UART_TxTail>
 5d2:	98 17       	cp	r25, r24
 5d4:	69 f0       	breq	.+26     	; 0x5f0 <__vector_19+0x38>
 5d6:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <UART_TxTail>
 5da:	ef 5f       	subi	r30, 0xFF	; 255
 5dc:	ef 71       	andi	r30, 0x1F	; 31
 5de:	e0 93 15 01 	sts	0x0115, r30	; 0x800115 <UART_TxTail>
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	e9 5c       	subi	r30, 0xC9	; 201
 5e6:	fe 4f       	sbci	r31, 0xFE	; 254
 5e8:	80 81       	ld	r24, Z
 5ea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 5ee:	05 c0       	rjmp	.+10     	; 0x5fa <__vector_19+0x42>
 5f0:	e1 ec       	ldi	r30, 0xC1	; 193
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	80 81       	ld	r24, Z
 5f6:	8f 7d       	andi	r24, 0xDF	; 223
 5f8:	80 83       	st	Z, r24
 5fa:	ff 91       	pop	r31
 5fc:	ef 91       	pop	r30
 5fe:	9f 91       	pop	r25
 600:	8f 91       	pop	r24
 602:	0f 90       	pop	r0
 604:	0f be       	out	0x3f, r0	; 63
 606:	0f 90       	pop	r0
 608:	1f 90       	pop	r1
 60a:	18 95       	reti

0000060c <uart_init>:
 60c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <UART_TxHead>
 610:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <UART_TxTail>
 614:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <UART_RxHead>
 618:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <UART_RxTail>
 61c:	28 2f       	mov	r18, r24
 61e:	39 2f       	mov	r19, r25
 620:	33 23       	and	r19, r19
 622:	1c f4       	brge	.+6      	; 0x62a <uart_init+0x1e>
 624:	22 e0       	ldi	r18, 0x02	; 2
 626:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 62a:	90 78       	andi	r25, 0x80	; 128
 62c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 630:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 634:	88 e9       	ldi	r24, 0x98	; 152
 636:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 63a:	86 e0       	ldi	r24, 0x06	; 6
 63c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 640:	08 95       	ret

00000642 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 642:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <UART_TxHead>
 646:	2f 5f       	subi	r18, 0xFF	; 255
 648:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
 64a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <UART_TxTail>
 64e:	29 17       	cp	r18, r25
 650:	e1 f3       	breq	.-8      	; 0x64a <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
 652:	e2 2f       	mov	r30, r18
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	e9 5c       	subi	r30, 0xC9	; 201
 658:	fe 4f       	sbci	r31, 0xFE	; 254
 65a:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
 65c:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
 660:	e1 ec       	ldi	r30, 0xC1	; 193
 662:	f0 e0       	ldi	r31, 0x00	; 0
 664:	80 81       	ld	r24, Z
 666:	80 62       	ori	r24, 0x20	; 32
 668:	80 83       	st	Z, r24
 66a:	08 95       	ret

0000066c <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
 66c:	cf 93       	push	r28
 66e:	df 93       	push	r29
 670:	ec 01       	movw	r28, r24
    while (*s) 
 672:	03 c0       	rjmp	.+6      	; 0x67a <uart_puts+0xe>
      uart_putc(*s++);
 674:	21 96       	adiw	r28, 0x01	; 1
 676:	0e 94 21 03 	call	0x642	; 0x642 <uart_putc>
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    while (*s) 
 67a:	88 81       	ld	r24, Y
 67c:	81 11       	cpse	r24, r1
 67e:	fa cf       	rjmp	.-12     	; 0x674 <uart_puts+0x8>
      uart_putc(*s++);

}/* uart_puts */
 680:	df 91       	pop	r29
 682:	cf 91       	pop	r28
 684:	08 95       	ret

00000686 <sprintf>:
 686:	ae e0       	ldi	r26, 0x0E	; 14
 688:	b0 e0       	ldi	r27, 0x00	; 0
 68a:	e9 e4       	ldi	r30, 0x49	; 73
 68c:	f3 e0       	ldi	r31, 0x03	; 3
 68e:	0c 94 04 06 	jmp	0xc08	; 0xc08 <__prologue_saves__+0x1c>
 692:	0d 89       	ldd	r16, Y+21	; 0x15
 694:	1e 89       	ldd	r17, Y+22	; 0x16
 696:	86 e0       	ldi	r24, 0x06	; 6
 698:	8c 83       	std	Y+4, r24	; 0x04
 69a:	1a 83       	std	Y+2, r17	; 0x02
 69c:	09 83       	std	Y+1, r16	; 0x01
 69e:	8f ef       	ldi	r24, 0xFF	; 255
 6a0:	9f e7       	ldi	r25, 0x7F	; 127
 6a2:	9e 83       	std	Y+6, r25	; 0x06
 6a4:	8d 83       	std	Y+5, r24	; 0x05
 6a6:	ae 01       	movw	r20, r28
 6a8:	47 5e       	subi	r20, 0xE7	; 231
 6aa:	5f 4f       	sbci	r21, 0xFF	; 255
 6ac:	6f 89       	ldd	r22, Y+23	; 0x17
 6ae:	78 8d       	ldd	r23, Y+24	; 0x18
 6b0:	ce 01       	movw	r24, r28
 6b2:	01 96       	adiw	r24, 0x01	; 1
 6b4:	0e 94 65 03 	call	0x6ca	; 0x6ca <vfprintf>
 6b8:	ef 81       	ldd	r30, Y+7	; 0x07
 6ba:	f8 85       	ldd	r31, Y+8	; 0x08
 6bc:	e0 0f       	add	r30, r16
 6be:	f1 1f       	adc	r31, r17
 6c0:	10 82       	st	Z, r1
 6c2:	2e 96       	adiw	r28, 0x0e	; 14
 6c4:	e4 e0       	ldi	r30, 0x04	; 4
 6c6:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__epilogue_restores__+0x1c>

000006ca <vfprintf>:
 6ca:	ab e0       	ldi	r26, 0x0B	; 11
 6cc:	b0 e0       	ldi	r27, 0x00	; 0
 6ce:	eb e6       	ldi	r30, 0x6B	; 107
 6d0:	f3 e0       	ldi	r31, 0x03	; 3
 6d2:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__prologue_saves__>
 6d6:	6c 01       	movw	r12, r24
 6d8:	7b 01       	movw	r14, r22
 6da:	8a 01       	movw	r16, r20
 6dc:	fc 01       	movw	r30, r24
 6de:	17 82       	std	Z+7, r1	; 0x07
 6e0:	16 82       	std	Z+6, r1	; 0x06
 6e2:	83 81       	ldd	r24, Z+3	; 0x03
 6e4:	81 ff       	sbrs	r24, 1
 6e6:	cc c1       	rjmp	.+920    	; 0xa80 <__stack+0x181>
 6e8:	ce 01       	movw	r24, r28
 6ea:	01 96       	adiw	r24, 0x01	; 1
 6ec:	3c 01       	movw	r6, r24
 6ee:	f6 01       	movw	r30, r12
 6f0:	93 81       	ldd	r25, Z+3	; 0x03
 6f2:	f7 01       	movw	r30, r14
 6f4:	93 fd       	sbrc	r25, 3
 6f6:	85 91       	lpm	r24, Z+
 6f8:	93 ff       	sbrs	r25, 3
 6fa:	81 91       	ld	r24, Z+
 6fc:	7f 01       	movw	r14, r30
 6fe:	88 23       	and	r24, r24
 700:	09 f4       	brne	.+2      	; 0x704 <vfprintf+0x3a>
 702:	ba c1       	rjmp	.+884    	; 0xa78 <__stack+0x179>
 704:	85 32       	cpi	r24, 0x25	; 37
 706:	39 f4       	brne	.+14     	; 0x716 <vfprintf+0x4c>
 708:	93 fd       	sbrc	r25, 3
 70a:	85 91       	lpm	r24, Z+
 70c:	93 ff       	sbrs	r25, 3
 70e:	81 91       	ld	r24, Z+
 710:	7f 01       	movw	r14, r30
 712:	85 32       	cpi	r24, 0x25	; 37
 714:	29 f4       	brne	.+10     	; 0x720 <vfprintf+0x56>
 716:	b6 01       	movw	r22, r12
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 71e:	e7 cf       	rjmp	.-50     	; 0x6ee <vfprintf+0x24>
 720:	91 2c       	mov	r9, r1
 722:	21 2c       	mov	r2, r1
 724:	31 2c       	mov	r3, r1
 726:	ff e1       	ldi	r31, 0x1F	; 31
 728:	f3 15       	cp	r31, r3
 72a:	d8 f0       	brcs	.+54     	; 0x762 <vfprintf+0x98>
 72c:	8b 32       	cpi	r24, 0x2B	; 43
 72e:	79 f0       	breq	.+30     	; 0x74e <vfprintf+0x84>
 730:	38 f4       	brcc	.+14     	; 0x740 <vfprintf+0x76>
 732:	80 32       	cpi	r24, 0x20	; 32
 734:	79 f0       	breq	.+30     	; 0x754 <vfprintf+0x8a>
 736:	83 32       	cpi	r24, 0x23	; 35
 738:	a1 f4       	brne	.+40     	; 0x762 <vfprintf+0x98>
 73a:	23 2d       	mov	r18, r3
 73c:	20 61       	ori	r18, 0x10	; 16
 73e:	1d c0       	rjmp	.+58     	; 0x77a <vfprintf+0xb0>
 740:	8d 32       	cpi	r24, 0x2D	; 45
 742:	61 f0       	breq	.+24     	; 0x75c <vfprintf+0x92>
 744:	80 33       	cpi	r24, 0x30	; 48
 746:	69 f4       	brne	.+26     	; 0x762 <vfprintf+0x98>
 748:	23 2d       	mov	r18, r3
 74a:	21 60       	ori	r18, 0x01	; 1
 74c:	16 c0       	rjmp	.+44     	; 0x77a <vfprintf+0xb0>
 74e:	83 2d       	mov	r24, r3
 750:	82 60       	ori	r24, 0x02	; 2
 752:	38 2e       	mov	r3, r24
 754:	e3 2d       	mov	r30, r3
 756:	e4 60       	ori	r30, 0x04	; 4
 758:	3e 2e       	mov	r3, r30
 75a:	2a c0       	rjmp	.+84     	; 0x7b0 <vfprintf+0xe6>
 75c:	f3 2d       	mov	r31, r3
 75e:	f8 60       	ori	r31, 0x08	; 8
 760:	1d c0       	rjmp	.+58     	; 0x79c <vfprintf+0xd2>
 762:	37 fc       	sbrc	r3, 7
 764:	2d c0       	rjmp	.+90     	; 0x7c0 <vfprintf+0xf6>
 766:	20 ed       	ldi	r18, 0xD0	; 208
 768:	28 0f       	add	r18, r24
 76a:	2a 30       	cpi	r18, 0x0A	; 10
 76c:	40 f0       	brcs	.+16     	; 0x77e <vfprintf+0xb4>
 76e:	8e 32       	cpi	r24, 0x2E	; 46
 770:	b9 f4       	brne	.+46     	; 0x7a0 <vfprintf+0xd6>
 772:	36 fc       	sbrc	r3, 6
 774:	81 c1       	rjmp	.+770    	; 0xa78 <__stack+0x179>
 776:	23 2d       	mov	r18, r3
 778:	20 64       	ori	r18, 0x40	; 64
 77a:	32 2e       	mov	r3, r18
 77c:	19 c0       	rjmp	.+50     	; 0x7b0 <vfprintf+0xe6>
 77e:	36 fe       	sbrs	r3, 6
 780:	06 c0       	rjmp	.+12     	; 0x78e <vfprintf+0xc4>
 782:	8a e0       	ldi	r24, 0x0A	; 10
 784:	98 9e       	mul	r9, r24
 786:	20 0d       	add	r18, r0
 788:	11 24       	eor	r1, r1
 78a:	92 2e       	mov	r9, r18
 78c:	11 c0       	rjmp	.+34     	; 0x7b0 <vfprintf+0xe6>
 78e:	ea e0       	ldi	r30, 0x0A	; 10
 790:	2e 9e       	mul	r2, r30
 792:	20 0d       	add	r18, r0
 794:	11 24       	eor	r1, r1
 796:	22 2e       	mov	r2, r18
 798:	f3 2d       	mov	r31, r3
 79a:	f0 62       	ori	r31, 0x20	; 32
 79c:	3f 2e       	mov	r3, r31
 79e:	08 c0       	rjmp	.+16     	; 0x7b0 <vfprintf+0xe6>
 7a0:	8c 36       	cpi	r24, 0x6C	; 108
 7a2:	21 f4       	brne	.+8      	; 0x7ac <vfprintf+0xe2>
 7a4:	83 2d       	mov	r24, r3
 7a6:	80 68       	ori	r24, 0x80	; 128
 7a8:	38 2e       	mov	r3, r24
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <vfprintf+0xe6>
 7ac:	88 36       	cpi	r24, 0x68	; 104
 7ae:	41 f4       	brne	.+16     	; 0x7c0 <vfprintf+0xf6>
 7b0:	f7 01       	movw	r30, r14
 7b2:	93 fd       	sbrc	r25, 3
 7b4:	85 91       	lpm	r24, Z+
 7b6:	93 ff       	sbrs	r25, 3
 7b8:	81 91       	ld	r24, Z+
 7ba:	7f 01       	movw	r14, r30
 7bc:	81 11       	cpse	r24, r1
 7be:	b3 cf       	rjmp	.-154    	; 0x726 <vfprintf+0x5c>
 7c0:	98 2f       	mov	r25, r24
 7c2:	9f 7d       	andi	r25, 0xDF	; 223
 7c4:	95 54       	subi	r25, 0x45	; 69
 7c6:	93 30       	cpi	r25, 0x03	; 3
 7c8:	28 f4       	brcc	.+10     	; 0x7d4 <vfprintf+0x10a>
 7ca:	0c 5f       	subi	r16, 0xFC	; 252
 7cc:	1f 4f       	sbci	r17, 0xFF	; 255
 7ce:	9f e3       	ldi	r25, 0x3F	; 63
 7d0:	99 83       	std	Y+1, r25	; 0x01
 7d2:	0d c0       	rjmp	.+26     	; 0x7ee <vfprintf+0x124>
 7d4:	83 36       	cpi	r24, 0x63	; 99
 7d6:	31 f0       	breq	.+12     	; 0x7e4 <vfprintf+0x11a>
 7d8:	83 37       	cpi	r24, 0x73	; 115
 7da:	71 f0       	breq	.+28     	; 0x7f8 <vfprintf+0x12e>
 7dc:	83 35       	cpi	r24, 0x53	; 83
 7de:	09 f0       	breq	.+2      	; 0x7e2 <vfprintf+0x118>
 7e0:	59 c0       	rjmp	.+178    	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 7e2:	21 c0       	rjmp	.+66     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 7e4:	f8 01       	movw	r30, r16
 7e6:	80 81       	ld	r24, Z
 7e8:	89 83       	std	Y+1, r24	; 0x01
 7ea:	0e 5f       	subi	r16, 0xFE	; 254
 7ec:	1f 4f       	sbci	r17, 0xFF	; 255
 7ee:	88 24       	eor	r8, r8
 7f0:	83 94       	inc	r8
 7f2:	91 2c       	mov	r9, r1
 7f4:	53 01       	movw	r10, r6
 7f6:	13 c0       	rjmp	.+38     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7f8:	28 01       	movw	r4, r16
 7fa:	f2 e0       	ldi	r31, 0x02	; 2
 7fc:	4f 0e       	add	r4, r31
 7fe:	51 1c       	adc	r5, r1
 800:	f8 01       	movw	r30, r16
 802:	a0 80       	ld	r10, Z
 804:	b1 80       	ldd	r11, Z+1	; 0x01
 806:	36 fe       	sbrs	r3, 6
 808:	03 c0       	rjmp	.+6      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80a:	69 2d       	mov	r22, r9
 80c:	70 e0       	ldi	r23, 0x00	; 0
 80e:	02 c0       	rjmp	.+4      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 810:	6f ef       	ldi	r22, 0xFF	; 255
 812:	7f ef       	ldi	r23, 0xFF	; 255
 814:	c5 01       	movw	r24, r10
 816:	0e 94 51 05 	call	0xaa2	; 0xaa2 <strnlen>
 81a:	4c 01       	movw	r8, r24
 81c:	82 01       	movw	r16, r4
 81e:	f3 2d       	mov	r31, r3
 820:	ff 77       	andi	r31, 0x7F	; 127
 822:	3f 2e       	mov	r3, r31
 824:	16 c0       	rjmp	.+44     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 826:	28 01       	movw	r4, r16
 828:	22 e0       	ldi	r18, 0x02	; 2
 82a:	42 0e       	add	r4, r18
 82c:	51 1c       	adc	r5, r1
 82e:	f8 01       	movw	r30, r16
 830:	a0 80       	ld	r10, Z
 832:	b1 80       	ldd	r11, Z+1	; 0x01
 834:	36 fe       	sbrs	r3, 6
 836:	03 c0       	rjmp	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 838:	69 2d       	mov	r22, r9
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	02 c0       	rjmp	.+4      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 83e:	6f ef       	ldi	r22, 0xFF	; 255
 840:	7f ef       	ldi	r23, 0xFF	; 255
 842:	c5 01       	movw	r24, r10
 844:	0e 94 46 05 	call	0xa8c	; 0xa8c <strnlen_P>
 848:	4c 01       	movw	r8, r24
 84a:	f3 2d       	mov	r31, r3
 84c:	f0 68       	ori	r31, 0x80	; 128
 84e:	3f 2e       	mov	r3, r31
 850:	82 01       	movw	r16, r4
 852:	33 fc       	sbrc	r3, 3
 854:	1b c0       	rjmp	.+54     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 856:	82 2d       	mov	r24, r2
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	88 16       	cp	r8, r24
 85c:	99 06       	cpc	r9, r25
 85e:	b0 f4       	brcc	.+44     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 860:	b6 01       	movw	r22, r12
 862:	80 e2       	ldi	r24, 0x20	; 32
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 86a:	2a 94       	dec	r2
 86c:	f4 cf       	rjmp	.-24     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 86e:	f5 01       	movw	r30, r10
 870:	37 fc       	sbrc	r3, 7
 872:	85 91       	lpm	r24, Z+
 874:	37 fe       	sbrs	r3, 7
 876:	81 91       	ld	r24, Z+
 878:	5f 01       	movw	r10, r30
 87a:	b6 01       	movw	r22, r12
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 882:	21 10       	cpse	r2, r1
 884:	2a 94       	dec	r2
 886:	21 e0       	ldi	r18, 0x01	; 1
 888:	82 1a       	sub	r8, r18
 88a:	91 08       	sbc	r9, r1
 88c:	81 14       	cp	r8, r1
 88e:	91 04       	cpc	r9, r1
 890:	71 f7       	brne	.-36     	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
 892:	e8 c0       	rjmp	.+464    	; 0xa64 <__stack+0x165>
 894:	84 36       	cpi	r24, 0x64	; 100
 896:	11 f0       	breq	.+4      	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 898:	89 36       	cpi	r24, 0x69	; 105
 89a:	41 f5       	brne	.+80     	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 89c:	f8 01       	movw	r30, r16
 89e:	37 fe       	sbrs	r3, 7
 8a0:	07 c0       	rjmp	.+14     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8a2:	60 81       	ld	r22, Z
 8a4:	71 81       	ldd	r23, Z+1	; 0x01
 8a6:	82 81       	ldd	r24, Z+2	; 0x02
 8a8:	93 81       	ldd	r25, Z+3	; 0x03
 8aa:	0c 5f       	subi	r16, 0xFC	; 252
 8ac:	1f 4f       	sbci	r17, 0xFF	; 255
 8ae:	08 c0       	rjmp	.+16     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8b0:	60 81       	ld	r22, Z
 8b2:	71 81       	ldd	r23, Z+1	; 0x01
 8b4:	07 2e       	mov	r0, r23
 8b6:	00 0c       	add	r0, r0
 8b8:	88 0b       	sbc	r24, r24
 8ba:	99 0b       	sbc	r25, r25
 8bc:	0e 5f       	subi	r16, 0xFE	; 254
 8be:	1f 4f       	sbci	r17, 0xFF	; 255
 8c0:	f3 2d       	mov	r31, r3
 8c2:	ff 76       	andi	r31, 0x6F	; 111
 8c4:	3f 2e       	mov	r3, r31
 8c6:	97 ff       	sbrs	r25, 7
 8c8:	09 c0       	rjmp	.+18     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 8ca:	90 95       	com	r25
 8cc:	80 95       	com	r24
 8ce:	70 95       	com	r23
 8d0:	61 95       	neg	r22
 8d2:	7f 4f       	sbci	r23, 0xFF	; 255
 8d4:	8f 4f       	sbci	r24, 0xFF	; 255
 8d6:	9f 4f       	sbci	r25, 0xFF	; 255
 8d8:	f0 68       	ori	r31, 0x80	; 128
 8da:	3f 2e       	mov	r3, r31
 8dc:	2a e0       	ldi	r18, 0x0A	; 10
 8de:	30 e0       	ldi	r19, 0x00	; 0
 8e0:	a3 01       	movw	r20, r6
 8e2:	0e 94 98 05 	call	0xb30	; 0xb30 <__ultoa_invert>
 8e6:	88 2e       	mov	r8, r24
 8e8:	86 18       	sub	r8, r6
 8ea:	45 c0       	rjmp	.+138    	; 0x976 <__stack+0x77>
 8ec:	85 37       	cpi	r24, 0x75	; 117
 8ee:	31 f4       	brne	.+12     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8f0:	23 2d       	mov	r18, r3
 8f2:	2f 7e       	andi	r18, 0xEF	; 239
 8f4:	b2 2e       	mov	r11, r18
 8f6:	2a e0       	ldi	r18, 0x0A	; 10
 8f8:	30 e0       	ldi	r19, 0x00	; 0
 8fa:	25 c0       	rjmp	.+74     	; 0x946 <__stack+0x47>
 8fc:	93 2d       	mov	r25, r3
 8fe:	99 7f       	andi	r25, 0xF9	; 249
 900:	b9 2e       	mov	r11, r25
 902:	8f 36       	cpi	r24, 0x6F	; 111
 904:	c1 f0       	breq	.+48     	; 0x936 <__stack+0x37>
 906:	18 f4       	brcc	.+6      	; 0x90e <__stack+0xf>
 908:	88 35       	cpi	r24, 0x58	; 88
 90a:	79 f0       	breq	.+30     	; 0x92a <__stack+0x2b>
 90c:	b5 c0       	rjmp	.+362    	; 0xa78 <__stack+0x179>
 90e:	80 37       	cpi	r24, 0x70	; 112
 910:	19 f0       	breq	.+6      	; 0x918 <__stack+0x19>
 912:	88 37       	cpi	r24, 0x78	; 120
 914:	21 f0       	breq	.+8      	; 0x91e <__stack+0x1f>
 916:	b0 c0       	rjmp	.+352    	; 0xa78 <__stack+0x179>
 918:	e9 2f       	mov	r30, r25
 91a:	e0 61       	ori	r30, 0x10	; 16
 91c:	be 2e       	mov	r11, r30
 91e:	b4 fe       	sbrs	r11, 4
 920:	0d c0       	rjmp	.+26     	; 0x93c <__stack+0x3d>
 922:	fb 2d       	mov	r31, r11
 924:	f4 60       	ori	r31, 0x04	; 4
 926:	bf 2e       	mov	r11, r31
 928:	09 c0       	rjmp	.+18     	; 0x93c <__stack+0x3d>
 92a:	34 fe       	sbrs	r3, 4
 92c:	0a c0       	rjmp	.+20     	; 0x942 <__stack+0x43>
 92e:	29 2f       	mov	r18, r25
 930:	26 60       	ori	r18, 0x06	; 6
 932:	b2 2e       	mov	r11, r18
 934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0x43>
 936:	28 e0       	ldi	r18, 0x08	; 8
 938:	30 e0       	ldi	r19, 0x00	; 0
 93a:	05 c0       	rjmp	.+10     	; 0x946 <__stack+0x47>
 93c:	20 e1       	ldi	r18, 0x10	; 16
 93e:	30 e0       	ldi	r19, 0x00	; 0
 940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
 942:	20 e1       	ldi	r18, 0x10	; 16
 944:	32 e0       	ldi	r19, 0x02	; 2
 946:	f8 01       	movw	r30, r16
 948:	b7 fe       	sbrs	r11, 7
 94a:	07 c0       	rjmp	.+14     	; 0x95a <__stack+0x5b>
 94c:	60 81       	ld	r22, Z
 94e:	71 81       	ldd	r23, Z+1	; 0x01
 950:	82 81       	ldd	r24, Z+2	; 0x02
 952:	93 81       	ldd	r25, Z+3	; 0x03
 954:	0c 5f       	subi	r16, 0xFC	; 252
 956:	1f 4f       	sbci	r17, 0xFF	; 255
 958:	06 c0       	rjmp	.+12     	; 0x966 <__stack+0x67>
 95a:	60 81       	ld	r22, Z
 95c:	71 81       	ldd	r23, Z+1	; 0x01
 95e:	80 e0       	ldi	r24, 0x00	; 0
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 5f       	subi	r16, 0xFE	; 254
 964:	1f 4f       	sbci	r17, 0xFF	; 255
 966:	a3 01       	movw	r20, r6
 968:	0e 94 98 05 	call	0xb30	; 0xb30 <__ultoa_invert>
 96c:	88 2e       	mov	r8, r24
 96e:	86 18       	sub	r8, r6
 970:	fb 2d       	mov	r31, r11
 972:	ff 77       	andi	r31, 0x7F	; 127
 974:	3f 2e       	mov	r3, r31
 976:	36 fe       	sbrs	r3, 6
 978:	0d c0       	rjmp	.+26     	; 0x994 <__stack+0x95>
 97a:	23 2d       	mov	r18, r3
 97c:	2e 7f       	andi	r18, 0xFE	; 254
 97e:	a2 2e       	mov	r10, r18
 980:	89 14       	cp	r8, r9
 982:	58 f4       	brcc	.+22     	; 0x99a <__stack+0x9b>
 984:	34 fe       	sbrs	r3, 4
 986:	0b c0       	rjmp	.+22     	; 0x99e <__stack+0x9f>
 988:	32 fc       	sbrc	r3, 2
 98a:	09 c0       	rjmp	.+18     	; 0x99e <__stack+0x9f>
 98c:	83 2d       	mov	r24, r3
 98e:	8e 7e       	andi	r24, 0xEE	; 238
 990:	a8 2e       	mov	r10, r24
 992:	05 c0       	rjmp	.+10     	; 0x99e <__stack+0x9f>
 994:	b8 2c       	mov	r11, r8
 996:	a3 2c       	mov	r10, r3
 998:	03 c0       	rjmp	.+6      	; 0x9a0 <__stack+0xa1>
 99a:	b8 2c       	mov	r11, r8
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <__stack+0xa1>
 99e:	b9 2c       	mov	r11, r9
 9a0:	a4 fe       	sbrs	r10, 4
 9a2:	0f c0       	rjmp	.+30     	; 0x9c2 <__stack+0xc3>
 9a4:	fe 01       	movw	r30, r28
 9a6:	e8 0d       	add	r30, r8
 9a8:	f1 1d       	adc	r31, r1
 9aa:	80 81       	ld	r24, Z
 9ac:	80 33       	cpi	r24, 0x30	; 48
 9ae:	21 f4       	brne	.+8      	; 0x9b8 <__stack+0xb9>
 9b0:	9a 2d       	mov	r25, r10
 9b2:	99 7e       	andi	r25, 0xE9	; 233
 9b4:	a9 2e       	mov	r10, r25
 9b6:	09 c0       	rjmp	.+18     	; 0x9ca <__stack+0xcb>
 9b8:	a2 fe       	sbrs	r10, 2
 9ba:	06 c0       	rjmp	.+12     	; 0x9c8 <__stack+0xc9>
 9bc:	b3 94       	inc	r11
 9be:	b3 94       	inc	r11
 9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__stack+0xcb>
 9c2:	8a 2d       	mov	r24, r10
 9c4:	86 78       	andi	r24, 0x86	; 134
 9c6:	09 f0       	breq	.+2      	; 0x9ca <__stack+0xcb>
 9c8:	b3 94       	inc	r11
 9ca:	a3 fc       	sbrc	r10, 3
 9cc:	11 c0       	rjmp	.+34     	; 0x9f0 <__stack+0xf1>
 9ce:	a0 fe       	sbrs	r10, 0
 9d0:	06 c0       	rjmp	.+12     	; 0x9de <__stack+0xdf>
 9d2:	b2 14       	cp	r11, r2
 9d4:	88 f4       	brcc	.+34     	; 0x9f8 <__stack+0xf9>
 9d6:	28 0c       	add	r2, r8
 9d8:	92 2c       	mov	r9, r2
 9da:	9b 18       	sub	r9, r11
 9dc:	0e c0       	rjmp	.+28     	; 0x9fa <__stack+0xfb>
 9de:	b2 14       	cp	r11, r2
 9e0:	60 f4       	brcc	.+24     	; 0x9fa <__stack+0xfb>
 9e2:	b6 01       	movw	r22, r12
 9e4:	80 e2       	ldi	r24, 0x20	; 32
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 9ec:	b3 94       	inc	r11
 9ee:	f7 cf       	rjmp	.-18     	; 0x9de <__stack+0xdf>
 9f0:	b2 14       	cp	r11, r2
 9f2:	18 f4       	brcc	.+6      	; 0x9fa <__stack+0xfb>
 9f4:	2b 18       	sub	r2, r11
 9f6:	02 c0       	rjmp	.+4      	; 0x9fc <__stack+0xfd>
 9f8:	98 2c       	mov	r9, r8
 9fa:	21 2c       	mov	r2, r1
 9fc:	a4 fe       	sbrs	r10, 4
 9fe:	10 c0       	rjmp	.+32     	; 0xa20 <__stack+0x121>
 a00:	b6 01       	movw	r22, r12
 a02:	80 e3       	ldi	r24, 0x30	; 48
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 a0a:	a2 fe       	sbrs	r10, 2
 a0c:	17 c0       	rjmp	.+46     	; 0xa3c <__stack+0x13d>
 a0e:	a1 fc       	sbrc	r10, 1
 a10:	03 c0       	rjmp	.+6      	; 0xa18 <__stack+0x119>
 a12:	88 e7       	ldi	r24, 0x78	; 120
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	02 c0       	rjmp	.+4      	; 0xa1c <__stack+0x11d>
 a18:	88 e5       	ldi	r24, 0x58	; 88
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	b6 01       	movw	r22, r12
 a1e:	0c c0       	rjmp	.+24     	; 0xa38 <__stack+0x139>
 a20:	8a 2d       	mov	r24, r10
 a22:	86 78       	andi	r24, 0x86	; 134
 a24:	59 f0       	breq	.+22     	; 0xa3c <__stack+0x13d>
 a26:	a1 fe       	sbrs	r10, 1
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <__stack+0x12f>
 a2a:	8b e2       	ldi	r24, 0x2B	; 43
 a2c:	01 c0       	rjmp	.+2      	; 0xa30 <__stack+0x131>
 a2e:	80 e2       	ldi	r24, 0x20	; 32
 a30:	a7 fc       	sbrc	r10, 7
 a32:	8d e2       	ldi	r24, 0x2D	; 45
 a34:	b6 01       	movw	r22, r12
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 a3c:	89 14       	cp	r8, r9
 a3e:	38 f4       	brcc	.+14     	; 0xa4e <__stack+0x14f>
 a40:	b6 01       	movw	r22, r12
 a42:	80 e3       	ldi	r24, 0x30	; 48
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 a4a:	9a 94       	dec	r9
 a4c:	f7 cf       	rjmp	.-18     	; 0xa3c <__stack+0x13d>
 a4e:	8a 94       	dec	r8
 a50:	f3 01       	movw	r30, r6
 a52:	e8 0d       	add	r30, r8
 a54:	f1 1d       	adc	r31, r1
 a56:	80 81       	ld	r24, Z
 a58:	b6 01       	movw	r22, r12
 a5a:	90 e0       	ldi	r25, 0x00	; 0
 a5c:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 a60:	81 10       	cpse	r8, r1
 a62:	f5 cf       	rjmp	.-22     	; 0xa4e <__stack+0x14f>
 a64:	22 20       	and	r2, r2
 a66:	09 f4       	brne	.+2      	; 0xa6a <__stack+0x16b>
 a68:	42 ce       	rjmp	.-892    	; 0x6ee <vfprintf+0x24>
 a6a:	b6 01       	movw	r22, r12
 a6c:	80 e2       	ldi	r24, 0x20	; 32
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	0e 94 5c 05 	call	0xab8	; 0xab8 <fputc>
 a74:	2a 94       	dec	r2
 a76:	f6 cf       	rjmp	.-20     	; 0xa64 <__stack+0x165>
 a78:	f6 01       	movw	r30, r12
 a7a:	86 81       	ldd	r24, Z+6	; 0x06
 a7c:	97 81       	ldd	r25, Z+7	; 0x07
 a7e:	02 c0       	rjmp	.+4      	; 0xa84 <__stack+0x185>
 a80:	8f ef       	ldi	r24, 0xFF	; 255
 a82:	9f ef       	ldi	r25, 0xFF	; 255
 a84:	2b 96       	adiw	r28, 0x0b	; 11
 a86:	e2 e1       	ldi	r30, 0x12	; 18
 a88:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__epilogue_restores__>

00000a8c <strnlen_P>:
 a8c:	fc 01       	movw	r30, r24
 a8e:	05 90       	lpm	r0, Z+
 a90:	61 50       	subi	r22, 0x01	; 1
 a92:	70 40       	sbci	r23, 0x00	; 0
 a94:	01 10       	cpse	r0, r1
 a96:	d8 f7       	brcc	.-10     	; 0xa8e <strnlen_P+0x2>
 a98:	80 95       	com	r24
 a9a:	90 95       	com	r25
 a9c:	8e 0f       	add	r24, r30
 a9e:	9f 1f       	adc	r25, r31
 aa0:	08 95       	ret

00000aa2 <strnlen>:
 aa2:	fc 01       	movw	r30, r24
 aa4:	61 50       	subi	r22, 0x01	; 1
 aa6:	70 40       	sbci	r23, 0x00	; 0
 aa8:	01 90       	ld	r0, Z+
 aaa:	01 10       	cpse	r0, r1
 aac:	d8 f7       	brcc	.-10     	; 0xaa4 <strnlen+0x2>
 aae:	80 95       	com	r24
 ab0:	90 95       	com	r25
 ab2:	8e 0f       	add	r24, r30
 ab4:	9f 1f       	adc	r25, r31
 ab6:	08 95       	ret

00000ab8 <fputc>:
 ab8:	0f 93       	push	r16
 aba:	1f 93       	push	r17
 abc:	cf 93       	push	r28
 abe:	df 93       	push	r29
 ac0:	fb 01       	movw	r30, r22
 ac2:	23 81       	ldd	r18, Z+3	; 0x03
 ac4:	21 fd       	sbrc	r18, 1
 ac6:	03 c0       	rjmp	.+6      	; 0xace <fputc+0x16>
 ac8:	8f ef       	ldi	r24, 0xFF	; 255
 aca:	9f ef       	ldi	r25, 0xFF	; 255
 acc:	2c c0       	rjmp	.+88     	; 0xb26 <fputc+0x6e>
 ace:	22 ff       	sbrs	r18, 2
 ad0:	16 c0       	rjmp	.+44     	; 0xafe <fputc+0x46>
 ad2:	46 81       	ldd	r20, Z+6	; 0x06
 ad4:	57 81       	ldd	r21, Z+7	; 0x07
 ad6:	24 81       	ldd	r18, Z+4	; 0x04
 ad8:	35 81       	ldd	r19, Z+5	; 0x05
 ada:	42 17       	cp	r20, r18
 adc:	53 07       	cpc	r21, r19
 ade:	44 f4       	brge	.+16     	; 0xaf0 <fputc+0x38>
 ae0:	a0 81       	ld	r26, Z
 ae2:	b1 81       	ldd	r27, Z+1	; 0x01
 ae4:	9d 01       	movw	r18, r26
 ae6:	2f 5f       	subi	r18, 0xFF	; 255
 ae8:	3f 4f       	sbci	r19, 0xFF	; 255
 aea:	31 83       	std	Z+1, r19	; 0x01
 aec:	20 83       	st	Z, r18
 aee:	8c 93       	st	X, r24
 af0:	26 81       	ldd	r18, Z+6	; 0x06
 af2:	37 81       	ldd	r19, Z+7	; 0x07
 af4:	2f 5f       	subi	r18, 0xFF	; 255
 af6:	3f 4f       	sbci	r19, 0xFF	; 255
 af8:	37 83       	std	Z+7, r19	; 0x07
 afa:	26 83       	std	Z+6, r18	; 0x06
 afc:	14 c0       	rjmp	.+40     	; 0xb26 <fputc+0x6e>
 afe:	8b 01       	movw	r16, r22
 b00:	ec 01       	movw	r28, r24
 b02:	fb 01       	movw	r30, r22
 b04:	00 84       	ldd	r0, Z+8	; 0x08
 b06:	f1 85       	ldd	r31, Z+9	; 0x09
 b08:	e0 2d       	mov	r30, r0
 b0a:	09 95       	icall
 b0c:	89 2b       	or	r24, r25
 b0e:	e1 f6       	brne	.-72     	; 0xac8 <fputc+0x10>
 b10:	d8 01       	movw	r26, r16
 b12:	16 96       	adiw	r26, 0x06	; 6
 b14:	8d 91       	ld	r24, X+
 b16:	9c 91       	ld	r25, X
 b18:	17 97       	sbiw	r26, 0x07	; 7
 b1a:	01 96       	adiw	r24, 0x01	; 1
 b1c:	17 96       	adiw	r26, 0x07	; 7
 b1e:	9c 93       	st	X, r25
 b20:	8e 93       	st	-X, r24
 b22:	16 97       	sbiw	r26, 0x06	; 6
 b24:	ce 01       	movw	r24, r28
 b26:	df 91       	pop	r29
 b28:	cf 91       	pop	r28
 b2a:	1f 91       	pop	r17
 b2c:	0f 91       	pop	r16
 b2e:	08 95       	ret

00000b30 <__ultoa_invert>:
 b30:	fa 01       	movw	r30, r20
 b32:	aa 27       	eor	r26, r26
 b34:	28 30       	cpi	r18, 0x08	; 8
 b36:	51 f1       	breq	.+84     	; 0xb8c <__ultoa_invert+0x5c>
 b38:	20 31       	cpi	r18, 0x10	; 16
 b3a:	81 f1       	breq	.+96     	; 0xb9c <__ultoa_invert+0x6c>
 b3c:	e8 94       	clt
 b3e:	6f 93       	push	r22
 b40:	6e 7f       	andi	r22, 0xFE	; 254
 b42:	6e 5f       	subi	r22, 0xFE	; 254
 b44:	7f 4f       	sbci	r23, 0xFF	; 255
 b46:	8f 4f       	sbci	r24, 0xFF	; 255
 b48:	9f 4f       	sbci	r25, 0xFF	; 255
 b4a:	af 4f       	sbci	r26, 0xFF	; 255
 b4c:	b1 e0       	ldi	r27, 0x01	; 1
 b4e:	3e d0       	rcall	.+124    	; 0xbcc <__ultoa_invert+0x9c>
 b50:	b4 e0       	ldi	r27, 0x04	; 4
 b52:	3c d0       	rcall	.+120    	; 0xbcc <__ultoa_invert+0x9c>
 b54:	67 0f       	add	r22, r23
 b56:	78 1f       	adc	r23, r24
 b58:	89 1f       	adc	r24, r25
 b5a:	9a 1f       	adc	r25, r26
 b5c:	a1 1d       	adc	r26, r1
 b5e:	68 0f       	add	r22, r24
 b60:	79 1f       	adc	r23, r25
 b62:	8a 1f       	adc	r24, r26
 b64:	91 1d       	adc	r25, r1
 b66:	a1 1d       	adc	r26, r1
 b68:	6a 0f       	add	r22, r26
 b6a:	71 1d       	adc	r23, r1
 b6c:	81 1d       	adc	r24, r1
 b6e:	91 1d       	adc	r25, r1
 b70:	a1 1d       	adc	r26, r1
 b72:	20 d0       	rcall	.+64     	; 0xbb4 <__ultoa_invert+0x84>
 b74:	09 f4       	brne	.+2      	; 0xb78 <__ultoa_invert+0x48>
 b76:	68 94       	set
 b78:	3f 91       	pop	r19
 b7a:	2a e0       	ldi	r18, 0x0A	; 10
 b7c:	26 9f       	mul	r18, r22
 b7e:	11 24       	eor	r1, r1
 b80:	30 19       	sub	r19, r0
 b82:	30 5d       	subi	r19, 0xD0	; 208
 b84:	31 93       	st	Z+, r19
 b86:	de f6       	brtc	.-74     	; 0xb3e <__ultoa_invert+0xe>
 b88:	cf 01       	movw	r24, r30
 b8a:	08 95       	ret
 b8c:	46 2f       	mov	r20, r22
 b8e:	47 70       	andi	r20, 0x07	; 7
 b90:	40 5d       	subi	r20, 0xD0	; 208
 b92:	41 93       	st	Z+, r20
 b94:	b3 e0       	ldi	r27, 0x03	; 3
 b96:	0f d0       	rcall	.+30     	; 0xbb6 <__ultoa_invert+0x86>
 b98:	c9 f7       	brne	.-14     	; 0xb8c <__ultoa_invert+0x5c>
 b9a:	f6 cf       	rjmp	.-20     	; 0xb88 <__ultoa_invert+0x58>
 b9c:	46 2f       	mov	r20, r22
 b9e:	4f 70       	andi	r20, 0x0F	; 15
 ba0:	40 5d       	subi	r20, 0xD0	; 208
 ba2:	4a 33       	cpi	r20, 0x3A	; 58
 ba4:	18 f0       	brcs	.+6      	; 0xbac <__ultoa_invert+0x7c>
 ba6:	49 5d       	subi	r20, 0xD9	; 217
 ba8:	31 fd       	sbrc	r19, 1
 baa:	40 52       	subi	r20, 0x20	; 32
 bac:	41 93       	st	Z+, r20
 bae:	02 d0       	rcall	.+4      	; 0xbb4 <__ultoa_invert+0x84>
 bb0:	a9 f7       	brne	.-22     	; 0xb9c <__ultoa_invert+0x6c>
 bb2:	ea cf       	rjmp	.-44     	; 0xb88 <__ultoa_invert+0x58>
 bb4:	b4 e0       	ldi	r27, 0x04	; 4
 bb6:	a6 95       	lsr	r26
 bb8:	97 95       	ror	r25
 bba:	87 95       	ror	r24
 bbc:	77 95       	ror	r23
 bbe:	67 95       	ror	r22
 bc0:	ba 95       	dec	r27
 bc2:	c9 f7       	brne	.-14     	; 0xbb6 <__ultoa_invert+0x86>
 bc4:	00 97       	sbiw	r24, 0x00	; 0
 bc6:	61 05       	cpc	r22, r1
 bc8:	71 05       	cpc	r23, r1
 bca:	08 95       	ret
 bcc:	9b 01       	movw	r18, r22
 bce:	ac 01       	movw	r20, r24
 bd0:	0a 2e       	mov	r0, r26
 bd2:	06 94       	lsr	r0
 bd4:	57 95       	ror	r21
 bd6:	47 95       	ror	r20
 bd8:	37 95       	ror	r19
 bda:	27 95       	ror	r18
 bdc:	ba 95       	dec	r27
 bde:	c9 f7       	brne	.-14     	; 0xbd2 <__ultoa_invert+0xa2>
 be0:	62 0f       	add	r22, r18
 be2:	73 1f       	adc	r23, r19
 be4:	84 1f       	adc	r24, r20
 be6:	95 1f       	adc	r25, r21
 be8:	a0 1d       	adc	r26, r0
 bea:	08 95       	ret

00000bec <__prologue_saves__>:
 bec:	2f 92       	push	r2
 bee:	3f 92       	push	r3
 bf0:	4f 92       	push	r4
 bf2:	5f 92       	push	r5
 bf4:	6f 92       	push	r6
 bf6:	7f 92       	push	r7
 bf8:	8f 92       	push	r8
 bfa:	9f 92       	push	r9
 bfc:	af 92       	push	r10
 bfe:	bf 92       	push	r11
 c00:	cf 92       	push	r12
 c02:	df 92       	push	r13
 c04:	ef 92       	push	r14
 c06:	ff 92       	push	r15
 c08:	0f 93       	push	r16
 c0a:	1f 93       	push	r17
 c0c:	cf 93       	push	r28
 c0e:	df 93       	push	r29
 c10:	cd b7       	in	r28, 0x3d	; 61
 c12:	de b7       	in	r29, 0x3e	; 62
 c14:	ca 1b       	sub	r28, r26
 c16:	db 0b       	sbc	r29, r27
 c18:	0f b6       	in	r0, 0x3f	; 63
 c1a:	f8 94       	cli
 c1c:	de bf       	out	0x3e, r29	; 62
 c1e:	0f be       	out	0x3f, r0	; 63
 c20:	cd bf       	out	0x3d, r28	; 61
 c22:	09 94       	ijmp

00000c24 <__epilogue_restores__>:
 c24:	2a 88       	ldd	r2, Y+18	; 0x12
 c26:	39 88       	ldd	r3, Y+17	; 0x11
 c28:	48 88       	ldd	r4, Y+16	; 0x10
 c2a:	5f 84       	ldd	r5, Y+15	; 0x0f
 c2c:	6e 84       	ldd	r6, Y+14	; 0x0e
 c2e:	7d 84       	ldd	r7, Y+13	; 0x0d
 c30:	8c 84       	ldd	r8, Y+12	; 0x0c
 c32:	9b 84       	ldd	r9, Y+11	; 0x0b
 c34:	aa 84       	ldd	r10, Y+10	; 0x0a
 c36:	b9 84       	ldd	r11, Y+9	; 0x09
 c38:	c8 84       	ldd	r12, Y+8	; 0x08
 c3a:	df 80       	ldd	r13, Y+7	; 0x07
 c3c:	ee 80       	ldd	r14, Y+6	; 0x06
 c3e:	fd 80       	ldd	r15, Y+5	; 0x05
 c40:	0c 81       	ldd	r16, Y+4	; 0x04
 c42:	1b 81       	ldd	r17, Y+3	; 0x03
 c44:	aa 81       	ldd	r26, Y+2	; 0x02
 c46:	b9 81       	ldd	r27, Y+1	; 0x01
 c48:	ce 0f       	add	r28, r30
 c4a:	d1 1d       	adc	r29, r1
 c4c:	0f b6       	in	r0, 0x3f	; 63
 c4e:	f8 94       	cli
 c50:	de bf       	out	0x3e, r29	; 62
 c52:	0f be       	out	0x3f, r0	; 63
 c54:	cd bf       	out	0x3d, r28	; 61
 c56:	ed 01       	movw	r28, r26
 c58:	08 95       	ret

00000c5a <_exit>:
 c5a:	f8 94       	cli

00000c5c <__stop_program>:
 c5c:	ff cf       	rjmp	.-2      	; 0xc5c <__stop_program>
